<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Social" Title="Meetup" Id="Meetup" RequireVersion="9.5.4" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Meetup.xml" HelpUrl="http://seotoolsforexcel.com/Meetup/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <DefaultOAuthAuthenticator StayAuthenticated="true" TokenName="access_token" AuthUrl="https://secure.meetup.com/oauth2/authorize?client_id=t7gs27hdtbo57k85c96kh8jbb6&amp;response_type=token&amp;redirect_uri={0}&amp;scope=basic"/>

  <Resources>
		<Resource Id="Authorization">
	    <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'>Bearer @(Model.Authenticator.Token)</Header>
        </RequestHeaders>
      </HttpSettings>
		</Resource>
		<Resource Id="Fail">
			<Fail>
				<JsonPath Expr="$.errors[0].message"/>
			</Fail>
		</Resource>
  </Resources>

  <RestConnector Id="TopicCategories" Hidden="true" HelpUrl="https://www.meetup.com/meetup_api/docs/find/topic_categories/">
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/find/topic_categories
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Title="Topic Id"/>
        <JsonPath Expr="name" Id="Name" Title="Topic Name"/>
			</JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EventsFind" Title="Events Find" Group="Events" HelpText="The events returned will be based on the hosting groups near the authenticated member's location. To customize, use latitude and longitude." HelpUrl="https://www.meetup.com/meetup_api/docs/find/upcoming_events/">
    <Parameters>
      <Text Id="Query" Title="Search Query" Required="false" HelpText="Full text search query"/>
      <Text Id="Topic" Title="Filter by Topic Id" Required="false" Select.Connector="TopicCategories" HelpText="Numeric topic category identifier for filtering recommendations by a topic category"/>
      <Text Id="Latitude" Title="Latitude" Required="false" HelpText="Approximate target latitude"/>
      <Text Id="Longitude" Title="Longitude" Required="false" HelpText="Approximate target longitude"/>
      <Text Id="Radius" Title="Radius (Miles | Max = 100)" Required="false" HelpText="Radius in miles. May be 0-100 Defaults to member's preferred radius"/>
      <DateInterval Id="Interval" Title="Filter by Date" Required="false" Nullable="true"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="best" HelpText="'best' orders events by recommendation score, while 'time' orders events by the by the event's start time in increasing order.">
        <DataSource>
					<Item Id="best" Title="Best"/>
					<Item Id="time" Title="Time"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of events to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/find/upcoming_events
				?page=@(Model.Results)
				&order=@(Model.Sort)
        @if(!string.IsNullOrEmpty(Model.Topic))
          @: &topic_category=@(Model.Topic)
				@if(Model.Interval.StartDate != null && Model.Interval.EndDate != null)
				{
					@: &start_date_range=@Model.Interval.StartDate.ToString("yyyy-MM-dd")T00:00:00
					@: &end_date_range=@Model.Interval.EndDate.ToString("yyyy-MM-dd")T00:00:00
				}
        @(!string.IsNullOrEmpty(Model.Latitude) && !string.IsNullOrEmpty(Model.Longitude) ? "&lat=" + Model.Latitude + "&lon=" + Model.Longitude : "")
        @if(!string.IsNullOrEmpty(Model.Radius))
          @: &radius=@(Model.Radius)
        @if(!string.IsNullOrEmpty(Model.Query))
          @: &text=@Utils.UrlEncode(Model.Query)
				&fields=comment_count
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="events[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="A unique alphanumeric identifier for event"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the event"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Description of the event. Email addresses and phone numbers will be masked for non-members">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Id="Time" Expr="time" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="UTC start time of the event" DefaultValue=""/>
        <JsonPath Expr="rsvp_limit" Id="RSVPLimit" Title="RSVP Limit" Converter="Long" DefaultValue="" HelpText="The number of 'yes' RSVPS an event has capacity for"/>
        <JsonPath Expr="yes_rsvp_count" Id="YesRSVP" Title="RSVP Yes" Converter="Long" DefaultValue="" HelpText="Number of yes RSVPs including guests"/>
        <JsonPath Expr="waitlist_count" Id="Waitlist" Converter="Long" DefaultValue="Number of members on the waitlist, if one exists"/>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the event" DefaultValue=""/>
        <JsonPath Expr="updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Last modified time for the event" DefaultValue=""/>
        <JsonPath Expr="how_to_find_us" Id="HowToFindUs" Title="How to find us" Converter="String" DefaultValue="" HelpText="Additional information on how to find members at a venue when provided by an organizer"/>
        <JsonPath Expr="visibility" Id="Visibility" Converter="String"/>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to event on meetup.com"/>
        <JsonPath Expr="venue.id" Id="VenueId" Converter="Auto" DefaultValue="" HelpText="Unique numeric venue id"/>
        <JsonPath Expr="venue.name" Id="VenueName" Converter="String" DefaultValue="" HelpText="Venue name"/>
        <JsonPath Expr="venue.lat" Id="VenueLat" Title="Venue Latitude" Converter="Double" DefaultValue="" HelpText="Approximate latitude"/>
        <JsonPath Expr="venue.lon" Id="VenueLon" Title="Venue Longitude" Converter="Double" DefaultValue="" HelpText="Approximate longitude"/>
        <JsonPath Expr="venue.address_1" Id="Address" Converter="String" DefaultValue="" HelpText="Line 1 of venue address"/>
        <JsonPath Expr="venue.city" Id="City" Converter="String" DefaultValue="" HelpText="City of venue"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="venue.country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="group.id" Id="GroupId" Converter="Long" DefaultValue="" HelpText="Numeric identifier for the group"/>
        <JsonPath Expr="group.name" Id="GroupName" Title="Group Name" Converter="String" DefaultValue="" HelpText="Name of the group"/>
        <JsonPath Expr="group.urlname" Id="GroupUrlName" Title="Group URL Name" Converter="String" DefaultValue="" HelpText="Alphanumeric urlname identifier for the group"/>
        <JsonPath Expr="group.created" Id="GroupCreated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the group" DefaultValue=""/>
        <JsonPath Expr="group.join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Indicator of how new members may be able to join"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EventsGroup" Title="Events by Group" Group="Events" HelpText="Gets a listing of all Meetup Events hosted by a target group" HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/events/#list">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
      <DateInterval Id="Interval" Title="Filter by Date" Required="false" Nullable="true"/>
		  <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="asc">
        <DataSource>
					<Item Id="asc" Title="Ascending"/>
					<Item Id="desc" Title="Descending"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="200" Minimum="1" Required="false" HelpText="A target minimum number of events to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/events
				?desc=@(Model.Sort == "desc" ? "true" : "false")
				@if(Model.Interval.StartDate != null && Model.Interval.EndDate != null)
				{
					@: &no_earlier_than=@Model.Interval.StartDate.ToString("yyyy-MM-dd")T00:00:00
					@: &no_later_than=@Model.Interval.EndDate.ToString("yyyy-MM-dd")T00:00:00
				}
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="A unique alphanumeric identifier for event"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the event"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Description of the event. Email addresses and phone numbers will be masked for non-members">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Id="Time" Expr="time" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="UTC start time of the event" DefaultValue=""/>
        <JsonPath Expr="rsvp_limit" Id="RSVPLimit" Title="RSVP Limit" Converter="Long" DefaultValue="" HelpText="The number of 'yes' RSVPS an event has capacity for"/>
        <JsonPath Expr="yes_rsvp_count" Id="YesRSVP" Title="RSVP Yes" Converter="Long" DefaultValue="" HelpText="Number of yes RSVPs including guests"/>
        <JsonPath Expr="waitlist_count" Id="Waitlist" Converter="Long" DefaultValue="Number of members on the waitlist, if one exists"/>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the event" DefaultValue=""/>
        <JsonPath Expr="updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Last modified time for the event" DefaultValue=""/>
        <JsonPath Expr="how_to_find_us" Id="HowToFindUs" Title="How to find us" Converter="String" DefaultValue="" HelpText="Additional information on how to find members at a venue when provided by an organizer"/>
        <JsonPath Expr="visibility" Id="Visibility" Converter="String"/>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to event on meetup.com"/>
        <JsonPath Expr="venue.id" Id="VenueId" Converter="Auto" DefaultValue="" HelpText="Unique numeric venue id"/>
        <JsonPath Expr="venue.name" Id="VenueName" Converter="String" DefaultValue="" HelpText="Venue name"/>
        <JsonPath Expr="venue.lat" Id="VenueLat" Title="Venue Latitude" Converter="Double" DefaultValue="" HelpText="Approximate latitude"/>
        <JsonPath Expr="venue.lon" Id="VenueLon" Title="Venue Longitude" Converter="Double" DefaultValue="" HelpText="Approximate longitude"/>
        <JsonPath Expr="venue.address_1" Id="Address" Converter="String" DefaultValue="" HelpText="Line 1 of venue address"/>
        <JsonPath Expr="venue.city" Id="City" Converter="String" DefaultValue="" HelpText="City of venue"/>
        <JsonPath Expr="venue.country" Id="Country" Converter="String" DefaultValue="" HelpText="Country code of venue"/>
        <JsonPath Expr="group.id" Id="GroupId" Converter="Long" DefaultValue="" HelpText="Numeric identifier for the group"/>
        <JsonPath Expr="group.name" Id="GroupName" Title="Group Name" Converter="String" DefaultValue="" HelpText="Name of the group"/>
        <JsonPath Expr="group.urlname" Id="GroupUrlName" Title="Group URL Name" Converter="String" DefaultValue="" HelpText="Alphanumeric urlname identifier for the group"/>
        <JsonPath Expr="group.created" Id="GroupCreated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the group" DefaultValue=""/>
        <JsonPath Expr="group.join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Indicator of how new members may be able to join"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EventsLookup" Title="Event Lookup" Group="Events" HelpText="Fetches a Meetup Event by group urlname and event_id" HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/events/:id/#get">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
      <Text Id="EventId" Title="Event Id" Required="true" Debug.DefaultValue="fvlmkqyxqbcc"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/events/@(Model.EventId)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="A unique alphanumeric identifier for event"/>
			<JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the event"/>
			<Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Description of the event. Email addresses and phone numbers will be masked for non-members">
				<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
			</Compute>
			<JsonPath Id="Time" Expr="time" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="UTC start time of the event" DefaultValue=""/>
			<JsonPath Expr="rsvp_limit" Id="RSVPLimit" Title="RSVP Limit" Converter="Long" DefaultValue="" HelpText="The number of 'yes' RSVPS an event has capacity for"/>
			<JsonPath Expr="yes_rsvp_count" Id="YesRSVP" Title="RSVP Yes" Converter="Long" DefaultValue="" HelpText="Number of yes RSVPs including guests"/>
			<JsonPath Expr="waitlist_count" Id="Waitlist" Converter="Long" DefaultValue="Number of members on the waitlist, if one exists"/>
			<JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the event" DefaultValue=""/>
			<JsonPath Expr="updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Last modified time for the event" DefaultValue=""/>
			<JsonPath Expr="how_to_find_us" Id="HowToFindUs" Title="How to find us" Converter="String" DefaultValue="" HelpText="Additional information on how to find members at a venue when provided by an organizer"/>
			<JsonPath Expr="visibility" Id="Visibility" Converter="String"/>
			<JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to event on meetup.com"/>
			<JsonPath Expr="venue.id" Id="VenueId" Converter="Auto" DefaultValue="" HelpText="Unique numeric venue id"/>
			<JsonPath Expr="venue.name" Id="VenueName" Converter="String" DefaultValue="" HelpText="Venue name"/>
			<JsonPath Expr="venue.lat" Id="VenueLat" Title="Venue Latitude" Converter="Double" DefaultValue="" HelpText="Approximate latitude"/>
			<JsonPath Expr="venue.lon" Id="VenueLon" Title="Venue Longitude" Converter="Double" DefaultValue="" HelpText="Approximate longitude"/>
			<JsonPath Expr="venue.address_1" Id="Address" Converter="String" DefaultValue="" HelpText="Line 1 of venue address"/>
			<JsonPath Expr="venue.city" Id="City" Converter="String" DefaultValue="" HelpText="City of venue"/>
			<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
				<JsonPath Expr="venue.country" Id="Inp" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="group.id" Id="GroupId" Converter="Long" DefaultValue="" HelpText="Numeric identifier for the group"/>
			<JsonPath Expr="group.name" Id="GroupName" Title="Group Name" Converter="String" DefaultValue="" HelpText="Name of the group"/>
			<JsonPath Expr="group.urlname" Id="GroupUrlName" Title="Group URL Name" Converter="String" DefaultValue="" HelpText="Alphanumeric urlname identifier for the group"/>
			<JsonPath Expr="group.created" Id="GroupCreated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the group" DefaultValue=""/>
			<JsonPath Expr="group.join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Indicator of how new members may be able to join"/>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EventAttendance" Title="Event Attendance" Group="Events" HelpText="Lists attendance records for Meetup events." HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/events/:id/attendance/#list">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" DefaultValue="" Required="true" Debug.DefaultValue="Stockholm-Table-Tennis-Club"/>
      <Text Id="EventId" Title="Event Id" DefaultValue="" Required="true" Debug.DefaultValue="254140032"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" HelpText="The sort order of returned attendees.">
        <DataSource>
					<Item Id="order=name&amp;desc=false" Title="Name Ascending"/>
					<Item Id="order=name&amp;desc=true" Title="Name Descending"/>
					<Item Id="social=name&amp;desc=false" Title="Social Ascending"/>
					<Item Id="social=name&amp;desc=true" Title="Social Descending"/>
					<Item Id="time=name&amp;desc=false" Title="Time Ascending"/>
					<Item Id="time=name&amp;desc=true" Title="Time Descending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/events/@(Model.EventId)/attendance?@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
				<JsonPath Expr="member.id" Id="Id" Converter="Auto" HelpText="Numeric member ID"/>
				<JsonPath Expr="member.name" Id="Name" Converter="String" HelpText="Name of member"/>
				<JsonPath Expr="rsvp.response" Id="Response" Converter="String" HelpText="Member's original RSVP response"/>
				<JsonPath Expr="rsvp.guests" Id="Guests" Converter="Long" HelpText="Number of guests when the member rsvped"/>
				<JsonPath Expr="rsvp.updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Last modified time for the event" DefaultValue=""/>
				<JsonPath Expr="member.event_context.host" Id="Host" Converter="Bool" HelpText="Boolean indicator for whether this member is a host for the event"/>
				<JsonPath Expr="member.photo.photo_link" Id="Photo" Converter="String" DefaultValue="Link for standard sized photo"/>
			</JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EventsPersonal" Title="Events Personal" Group="Events" HelpText="Gets a listing of all scheduled Meetup Events the authenticated member has RSVP'd to" HelpUrl="https://www.meetup.com/meetup_api/docs/self/events/">
    <Parameters>
      <DateInterval Id="Interval" Title="Filter by Date" Required="false" Nullable="true"/>
		  <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="asc">
        <DataSource>
					<Item Id="asc" Title="Ascending"/>
					<Item Id="desc" Title="Descending"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="200" Minimum="1" Required="false" HelpText="A target minimum number of events to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/self/events
				?desc=@(Model.Sort == "desc" ? "true" : "false")
				@if(Model.Interval.StartDate != null && Model.Interval.EndDate != null)
				{
					@: &no_earlier_than=@Model.Interval.StartDate.ToString("yyyy-MM-dd")T00:00:00
					@: &no_later_than=@Model.Interval.EndDate.ToString("yyyy-MM-dd")T00:00:00
				}
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
				<JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="A unique alphanumeric identifier for event"/>
				<JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the event"/>
				<Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Description of the event. Email addresses and phone numbers will be masked for non-members">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
				</Compute>
				<JsonPath Id="Time" Expr="time" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="UTC start time of the event" DefaultValue=""/>
				<JsonPath Expr="rsvp_limit" Id="RSVPLimit" Title="RSVP Limit" Converter="Long" DefaultValue="" HelpText="The number of 'yes' RSVPS an event has capacity for"/>
				<JsonPath Expr="yes_rsvp_count" Id="YesRSVP" Title="RSVP Yes" Converter="Long" DefaultValue="" HelpText="Number of yes RSVPs including guests"/>
				<JsonPath Expr="waitlist_count" Id="Waitlist" Converter="Long" DefaultValue="Number of members on the waitlist, if one exists"/>
				<JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the event" DefaultValue=""/>
				<JsonPath Expr="updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Last modified time for the event" DefaultValue=""/>
				<JsonPath Expr="how_to_find_us" Id="HowToFindUs" Title="How to find us" Converter="String" DefaultValue="" HelpText="Additional information on how to find members at a venue when provided by an organizer"/>
				<JsonPath Expr="visibility" Id="Visibility" Converter="String"/>
				<JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to event on meetup.com"/>
				<JsonPath Expr="venue.id" Id="VenueId" Converter="Auto" DefaultValue="" HelpText="Unique numeric venue id"/>
				<JsonPath Expr="venue.name" Id="VenueName" Converter="String" DefaultValue="" HelpText="Venue name"/>
				<JsonPath Expr="venue.lat" Id="VenueLat" Title="Venue Latitude" Converter="Double" DefaultValue="" HelpText="Approximate latitude"/>
				<JsonPath Expr="venue.lon" Id="VenueLon" Title="Venue Longitude" Converter="Double" DefaultValue="" HelpText="Approximate longitude"/>
				<JsonPath Expr="venue.address_1" Id="Address" Converter="String" DefaultValue="" HelpText="Line 1 of venue address"/>
				<JsonPath Expr="venue.city" Id="City" Converter="String" DefaultValue="" HelpText="City of venue"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="venue.country" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="group.id" Id="GroupId" Converter="Long" DefaultValue="" HelpText="Numeric identifier for the group"/>
				<JsonPath Expr="group.name" Id="GroupName" Title="Group Name" Converter="String" DefaultValue="" HelpText="Name of the group"/>
				<JsonPath Expr="group.urlname" Id="GroupUrlName" Title="Group URL Name" Converter="String" DefaultValue="" HelpText="Alphanumeric urlname identifier for the group"/>
				<JsonPath Expr="group.created" Id="GroupCreated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Creation time of the group" DefaultValue=""/>
				<JsonPath Expr="group.join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Indicator of how new members may be able to join"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CitiesFind" Title="Cities Find" Group="Locations" HelpText="Returns Meetup cities." HelpUrl="https://www.meetup.com/meetup_api/docs/2/cities/">
    <Parameters>
      <Text Id="Query" Title="Search Query" Required="false" HelpText="Full text search query"/>
      <Text Id="Country" Title="Country (2 Letter Code)" Required="false" HelpText="A valid country code"/>
      <Text Id="Latitude" Title="Latitude" Required="false" HelpText="Approximate target latitude"/>
      <Text Id="Longitude" Title="Longitude" Required="false" HelpText="Approximate target longitude"/>
      <Text Id="Radius" Title="Radius (Miles | Max = 100)" Required="false" HelpText="Radius in miles. May be 0-100. Defaults to member's preferred radius"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="best">
        <DataSource>
					<Item Id="smart" Title="Smart"/>
					<Item Id="size" Title="Size"/>
					<Item Id="distance" Title="Distance"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of events to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/2/cities
				?page=@(Model.Results)
				&order=@(Model.Sort)
        @if(!string.IsNullOrEmpty(Model.Country))
          @: &country=@(Model.Country)
        @(!string.IsNullOrEmpty(Model.Latitude) && !string.IsNullOrEmpty(Model.Longitude) ? "&lat=" + Model.Latitude + "&lon=" + Model.Longitude : "")
        @if(!string.IsNullOrEmpty(Model.Radius))
          @: &radius=@(Model.Radius)
        @if(!string.IsNullOrEmpty(Model.Query))
          @: &text=@Utils.UrlEncode(Model.Query)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="results[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric identifier of the city"/>
        <JsonPath Expr="city" Id="City" Converter="String" HelpText="The name of the city"/>
        <JsonPath Expr="country" Id="Country" Converter="String" HelpText="The ISO_3166-1 country code for the country which contains the city"/>
        <JsonPath Expr="member_count" Id="Members" Converter="Long" HelpText="The number of Meetup members in the city"/>
        <JsonPath Expr="distance" Id="Distance" Converter="Double" HelpText="The distance away from the provided coordinates, if applicable"/>
        <JsonPath Expr="lat" Id="Lat" Title="Latitude" Converter="Double" DefaultValue="" HelpText="The latitude of the city"/>
        <JsonPath Expr="lon" Id="Lon" Title="Longitude" Converter="Double" DefaultValue="" HelpText="The longitude of the city"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Comments" Title="Event Comments" Group="Events" HelpText="Lists the comments and replies posted in a given Meetup Event." HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/events/:event_id/comments/#list">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Stockholm-Table-Tennis-Club"/>
      <Text Id="EventId" Title="Event Id" Required="true" Debug.DefaultValue="254140032"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/events/@(Model.EventId)/comments
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
				<JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Comment id"/>
				<JsonPath Expr="comment" Id="Comment" Converter="String" HelpText="The comment the member left for the event"/>
				<JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time the comment was posted" DefaultValue=""/>
				<JsonPath Expr="like_count" Id="Likes" Converter="Long" HelpText="The number of likes the comment has"/>
				<JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to the comment"/>
				<JsonPath Expr="member.id" Id="MemberId" Converter="Long" HelpText="Numeric member ID"/>
				<JsonPath Expr="member.name" Id="Name" Converter="String" HelpText="Name of member"/>
				<JsonPath Expr="member.role" Id="Role" Converter="String" HelpText="The leadership role of this member within the group, if any."/>
				<JsonPath Expr="member.event_context.host" Id="Host" Converter="Bool" HelpText="Boolean indicator for whether this member is a host for the event"/>
				<JsonPath Expr="member.photo.photo_link" Id="Photo" Converter="String" DefaultValue="Link for standard sized photo"/>
			</JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupsFind" Title="Groups Find" Group="Groups" HelpText="Text, location, category and friend-based group searches" HelpUrl="https://www.meetup.com/meetup_api/docs/find/groups/">
    <Parameters>
      <Text Id="Query" Title="Search Query" Required="false" HelpText="Full text search query"/>
      <Text Id="Location" Title="Search Location" Required="false" HelpText="Raw text location query"/>
      <Text Id="Latitude" Title="Latitude" Required="false" HelpText="Approximate target latitude"/>
      <Text Id="Longitude" Title="Longitude" Required="false" HelpText="Approximate target longitude"/>
      <Text Id="Radius" Title="Radius (Miles | Max = 100)" Required="false" HelpText="Radius in miles. May be 0-100. Defaults to member's preferred radius"/>
      <DateInterval Id="Interval" Title="Filter by Date" Required="false" Nullable="true"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="distance">
        <DataSource>
					<Item Id="distance" Title="Distance"/>
					<Item Id="members" Title="Members"/>
					<Item Id="most_active" Title="Most Active"/>
					<Item Id="newest" Title="Newest"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of groups to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/find/groups
				?page=@(Model.Results)
				&order=@(Model.Sort)
				@if(Model.Interval.StartDate != null && Model.Interval.EndDate != null)
				{
					@: &start_date_range=@Model.Interval.StartDate.ToString("yyyy-MM-dd")T00:00:00
					@: &end_date_range=@Model.Interval.EndDate.ToString("yyyy-MM-dd")T00:00:00
				}
        @(!string.IsNullOrEmpty(Model.Latitude) && !string.IsNullOrEmpty(Model.Longitude) ? "&lat=" + Model.Latitude + "&lon=" + Model.Longitude : "")
        @if(!string.IsNullOrEmpty(Model.Radius))
          @: &radius=@(Model.Radius)
        @if(!string.IsNullOrEmpty(Model.Query))
          @: &text=@Utils.UrlEncode(Model.Query)
        @if(!string.IsNullOrEmpty(Model.Location))
          @: &location=@Utils.UrlEncode(Model.Location)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric group ID"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the group"/>
        <JsonPath Expr="urlname" Id="UrlName" Converter="String" HelpText="Urlname used to identify the group on meetup.com"/>
        <JsonPath Expr="members" Id="Members" Converter="Long" HelpText="Number of Meetup members in this group"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Short description of group">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time the group was created" DefaultValue=""/>
        <JsonPath Expr="category.id" Id="CategoryId" Converter="Long" HelpText="Numeric category id"/>
        <JsonPath Expr="category.name" Id="CategoryName" Converter="String" HelpText="Display name of the category"/>
        <JsonPath Expr="status" Id="Status" Converter="String" HelpText="Status of the group"/>
        <JsonPath Expr="visibility" Id="Visibility" Converter="String" HelpText="Who can see this group"/>
        <JsonPath Expr="group_photo.photo_link" Id="Photo" Converter="String" DefaultValue="" HelpText="Link for standard sized photo"/>
        <JsonPath Expr="join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Who can join this group and how"/>
        <JsonPath Expr="city" Id="City" Converter="String" HelpText="City of the group"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to group on meetup.com"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupLookup" Title="Group Lookup" Group="Groups" HelpText="Fetches a Meetup group by urlname" HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/#get">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric group ID"/>
			<JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the group"/>
			<JsonPath Expr="urlname" Id="UrlName" Converter="String" HelpText="Urlname used to identify the group on meetup.com"/>
			<JsonPath Expr="members" Id="Members" Converter="Long" HelpText="Number of Meetup members in this group"/>
			<Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Short description of group">
				<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
			</Compute>
      <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time the group was created" DefaultValue=""/>
			<JsonPath Expr="category.id" Id="CategoryId" Converter="Long" HelpText="Numeric category id"/>
			<JsonPath Expr="category.name" Id="CategoryName" Converter="String" HelpText="Display name of the category"/>
			<JsonPath Expr="status" Id="Status" Converter="String" HelpText="Status of the group"/>
			<JsonPath Expr="visibility" Id="Visibility" Converter="String" HelpText="Who can see this group"/>
			<JsonPath Expr="group_photo.photo_link" Id="Photo" Converter="String" DefaultValue="" HelpText="Link for standard sized photo"/>
			<JsonPath Expr="join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Who can join this group and how"/>
			<JsonPath Expr="city" Id="City" Converter="String" HelpText="City of the group"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
			<JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to group on meetup.com"/>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupsSimilar" Title="Groups Similar" Group="Groups" HelpText="Renders a list of similar groups" HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/similar_groups/">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/similar_groups
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric group ID"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the group"/>
        <JsonPath Expr="urlname" Id="UrlName" Converter="String" HelpText="Urlname used to identify the group on meetup.com"/>
        <JsonPath Expr="members" Id="Members" Converter="Long" HelpText="Number of Meetup members in this group"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Short description of group">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time the group was created" DefaultValue=""/>
        <JsonPath Expr="category.id" Id="CategoryId" Converter="Long" HelpText="Numeric category id"/>
        <JsonPath Expr="category.name" Id="CategoryName" Converter="String" HelpText="Display name of the category"/>
        <JsonPath Expr="status" Id="Status" Converter="String" HelpText="Status of the group"/>
        <JsonPath Expr="visibility" Id="Visibility" Converter="String" HelpText="Who can see this group"/>
        <JsonPath Expr="group_photo.photo_link" Id="Photo" Converter="String" DefaultValue="" HelpText="Link for standard sized photo"/>
        <JsonPath Expr="join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Who can join this group and how"/>
        <JsonPath Expr="city" Id="City" Converter="String" HelpText="City of the group"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to group on meetup.com"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupsPersonal" Title="Groups Personal" Group="Groups" HelpText="Lists the authenticated member's groups in the order of leadership, next upcoming event, then alphabetical order by name" HelpUrl="https://www.meetup.com/meetup_api/docs/self/groups/">
    <Parameters>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of groups to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/self/groups
				?page=@(Model.Results)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric group ID"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="Name of the group"/>
        <JsonPath Expr="urlname" Id="UrlName" Converter="String" HelpText="Urlname used to identify the group on meetup.com"/>
        <JsonPath Expr="members" Id="Members" Converter="Long" HelpText="Number of Meetup members in this group"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Description" Converter="String" DefaultValue="" HelpText="Short description of group">
					<JsonPath Expr="description" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time the group was created" DefaultValue=""/>
        <JsonPath Expr="category.id" Id="CategoryId" Converter="Long" HelpText="Numeric category id"/>
        <JsonPath Expr="category.name" Id="CategoryName" Converter="String" HelpText="Display name of the category"/>
        <JsonPath Expr="status" Id="Status" Converter="String" HelpText="Status of the group"/>
        <JsonPath Expr="visibility" Id="Visibility" Converter="String" HelpText="Who can see this group"/>
        <JsonPath Expr="group_photo.photo_link" Id="Photo" Converter="String" DefaultValue="" HelpText="Link for standard sized photo"/>
        <JsonPath Expr="join_mode" Id="JoinMode" Converter="String" DefaultValue="" HelpText="Who can join this group and how"/>
        <JsonPath Expr="city" Id="City" Converter="String" HelpText="City of the group"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to group on meetup.com"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupMembers" Title="Group Members" Group="Groups" HelpText="Accessing members of Meetup Groups" HelpUrl="https://www.meetup.com/meetup_api/docs/2/members/">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="distance">
        <DataSource>
					<Item Id="joined" Title="Joined"/>
					<Item Id="name" Title="Name"/>
					<Item Id="visited" Title="Visited"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="20" EvenPages="true"/>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/2/members
				?group_urlname=@(Model.GroupUrlName)
				&order=@(Model.Sort)
				&page=@(Model.PageCursor.NextTake)
				&offset=@(Model.PageCursor.NextSkip)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.results[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="The member's id"/>
        <JsonPath Expr="name" Id="Name" Converter="String" HelpText="The member's name"/>
        <Compute Expr="@Utils.StripTags(Model.Inp)" Id="Bio" Converter="String" DefaultValue="" HelpText="A description of the member">
					<JsonPath Expr="bio" Id="Inp" Converter="String" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="joined" Id="Joined" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Date and time a member joined" DefaultValue=""/>
        <JsonPath Expr="visited" Id="Visited" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Date and time of member's last activity" DefaultValue=""/>
        <JsonPath Expr="city" Id="City" Converter="String" DefaultValue="" HelpText="City which member has provided"/>
        <JsonPath Expr="hometown" Id="Hometown" Converter="String" DefaultValue="" HelpText="Hometown which member has provided"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="photo.photo_link" Id="Photo" Converter="String" DefaultValue="" HelpText="Link for standard sized photo"/>
        <JsonPath Expr="other_services.twitter.identifier" Id="Twitter" Converter="String" DefaultValue="" HelpText="Third-party services associated with the member account"/>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="URL to the member's profile page on meetup.com"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupPhotos" Title="Group Photos" Group="Groups" HelpText="Lists of all photos uploaded for the group" HelpUrl="https://www.meetup.com/meetup_api/docs/:urlname/photos/#list">
    <Parameters>
      <Text Id="GroupUrlName" Title="Group URL Name" Required="true" Debug.DefaultValue="Sthlm-Startups"/>
		  <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="asc">
        <DataSource>
					<Item Id="asc" Title="Ascending"/>
					<Item Id="desc" Title="Descending"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of groups to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/@(Model.GroupUrlName)/photos
				?desc=@(Model.Sort == "desc" ? "true" : "false")
				?page=@(Model.Results)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Numeric photo ID"/>
        <JsonPath Expr="caption" Id="Caption" Converter="String" DefaultValue="Photo caption, if defined"/>
        <JsonPath Expr="created" Id="Created" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time photo was uploaded" DefaultValue=""/>
        <JsonPath Expr="updated" Id="Updated" Converter="DateTime" Converter.SourceFormat="UnixMs" HelpText="Time photo was last updated" DefaultValue=""/>
        <JsonPath Expr="member.id" Id="MemberId" Converter="Auto" HelpText="Numeric member ID"/>
        <JsonPath Expr="member.name" Id="Member" Converter="Auto" HelpText="Name of member"/>
        <JsonPath Expr="highres_link" Id="HighRes" Converter="String" HelpText="Link for full sized photo"/>
        <JsonPath Expr="photo_link" Id="Photo" Converter="String" HelpText="Link for standard sized photo"/>
        <JsonPath Expr="thumb_link" Id="Thumbnail" Converter="String" HelpText="Link for thumbnail sized photo"/>
        <JsonPath Expr="link" Id="Link" Converter="String" HelpText="Link to photo on meetup.com"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="VenuesFind" Title="Venues Find" Group="Locations" HelpText="Returns list of venues based on location" HelpUrl="https://www.meetup.com/meetup_api/docs/find/venues/">
    <Parameters>
      <Text Id="Query" Title="Search Query" Required="true" Debug.DefaultValue="Malmö" HelpText="Full text search query"/>
      <Text Id="Country" Title="Country (2 Letter Code)" Required="false" HelpText="A valid country code"/>
      <Text Id="Latitude" Title="Latitude" Required="false" HelpText="Approximate target latitude"/>
      <Text Id="Longitude" Title="Longitude" Required="false" HelpText="Approximate target longitude"/>
      <Text Id="Radius" Title="Radius (Miles | Max = 100)" Required="false" HelpText="Radius in miles. May be 0-100. Defaults to member's preferred radius"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="order=rating_count&amp;desc=true" HelpText="The sort order of returned venues.">
        <DataSource>
					<Item Id="order=rating_count&amp;desc=false" Title="Rating Count Ascending"/>
					<Item Id="order=rating_count&amp;desc=true" Title="Rating Count Descending"/>
					<Item Id="order=rating&amp;desc=false" Title="Rating Ascending"/>
					<Item Id="order=rating&amp;desc=true" Title="Rating Descending"/>
					<Item Id="order=distance&amp;desc=false" Title="Distance Ascending"/>
					<Item Id="order=distance&amp;desc=true" Title="Distance Descending"/>
        </DataSource>
      </Select>
      <Number Id="Results" Title="Max Results" DefaultValue="100" Minimum="1" Required="false" HelpText="A target minimum number of events to return in a single page of results"/>
    </Parameters>
    <Fetch>
			<Resource Id="Authorization"/>
      <Fetch.Url>
        <![CDATA[
        https://api.meetup.com/find/venues
				?page=@(Model.Results)
				&@(Model.Sort)
        @if(!string.IsNullOrEmpty(Model.Country))
          @: &country=@(Model.Country)
        @(!string.IsNullOrEmpty(Model.Latitude) && !string.IsNullOrEmpty(Model.Longitude) ? "&lat=" + Model.Latitude + "&lon=" + Model.Longitude : "")
        @if(!string.IsNullOrEmpty(Model.Radius))
          @: &radius=@(Model.Radius)
        @if(!string.IsNullOrEmpty(Model.Query))
          @: &text=@Utils.UrlEncode(Model.Query)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$[*]">
        <JsonPath Expr="id" Id="Id" Converter="Auto" HelpText="Id of the venue"/>
        <JsonPath Expr="name" Id="Name" Converter="String" DefaultValue="" HelpText="If available, the venue's name"/>
        <JsonPath Expr="address_1" Id="Address" Converter="String" DefaultValue="" HelpText="If available, the first address line of the venue"/>
        <JsonPath Expr="city" Id="City" Converter="String" HelpText="If available, the name of the venue's city"/>
        <JsonPath Expr="lat" Id="Lat" Title="Latitude" Converter="Double" DefaultValue="" HelpText="If available, the venue's latitude"/>
        <JsonPath Expr="lon" Id="Lon" Title="Longitude" Converter="Double" DefaultValue="" HelpText="If available, the venue's longitude"/>
				<Compute Expr="@Utils.IsoCountryCodeToName(Model.Inp)" Id="Country" Converter="Auto">
					<JsonPath Expr="country" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="rating" Id="Rating" Converter="Double" HelpText="The average rating for the venue"/>
        <JsonPath Expr="rating_count" Id="RatingCount" Converter="Long" HelpText="The number of times the venue was rated"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

</Suite>