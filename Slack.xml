<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Productivity" Title="Slack" Id="Slack" RequireVersion="9.5.4" LoginButton="https://seotoolsforexcel.com/logins/slack.png" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Slack.xml" HelpUrl="http://seotoolsforexcel.com/slack/" HelpText="Documentation">

  <SeoToolsAuthenticator StayAuthenticated="true" Key="slack"/>

  <Resources>
    <Resource Id="Fail">
			<Fail>
				<JsonPath Expr="error"/>
			</Fail>
    </Resource>
    <Resource Id="HttpSettings">
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Resource>
  </Resources>

  <RestConnector Id="ChannelsHidden" HelpUrl="https://api.slack.com/methods/conversations.list" Hidden="true">
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
				https://slack.com/api/conversations.list?types=public_channel,private_channel
				]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.channels[*]">
        <JsonPath Expr="id" Id="Id" Title="Channel Id"/>
        <JsonPath Expr="name" Id="Name" Title="Channel Name"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Channels" Title="Channels List" HelpText="This method returns a list of all channels in the team." HelpUrl="https://api.slack.com/methods/channels.list">
    <Paging PageSize="200" EvenPages="true">
      <Parse>
        <JsonPath Id="Cursor" Expr="response_metadata.next_cursor"/>
      </Parse>
    </Paging>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/conversations.list?types=public_channel,private_channel
				&limit=@(Model.PageCursor.NextTake)
        @(Model.PageCursor.Page != 0 ? "&cursor=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.channels[*]">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="creator" Id="Creator" Title="Creator" Converter="String"/>
        <JsonPath Expr="is_group" Id="Group" Title="Group" Converter="Bool"/>
        <JsonPath Expr="is_shared" Id="Shared" Title="Shared" Converter="Bool"/>
        <JsonPath Expr="is_member" Id="Member" Title="Member" Converter="Bool"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="ChannelHistory" Title="Channel History" HelpText="Fetches history of messages and events from a channel." HelpUrl="https://api.slack.com/methods/channels.history">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id" Required="true" Debug.DefaultValue="CAXNW7C31" Select.Connector="ChannelsHidden"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false"/>
		</Parameters>
    <Paging PageSize="100" EvenPages="true" Maximum="1000">
      <Parse>
        <JsonPath Expr="$.has_more" Id="HasMore" Converter="Bool"/>
        <JsonPath Expr="$.messages[-1:].ts" Id="PageOld" Converter="String"/>
      </Parse>
    </Paging>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/conversations.history?channel=@(Model.ChannelId)
				&count=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page == 0)
        {
					@: &oldest=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &latest=@(((DateTime)Model.DateInterval.EndDate).AddDays(-1).UnixTimeStampUtc())
				}
				else if(Model.HasMore)
				{
					@: &oldest=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &latest=@(Model.PageOld)
				}
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.messages[*]">
        <JsonPath Expr="ts" Id="Identifier" Title="Identifier" Converter="String"/>
        <Compute Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix">
          <Compute.Expr>
            <![CDATA[
              @Regex.Replace(Model.Inp,@"\.\d+","")
            ]]>
          </Compute.Expr>
          <JsonPath Expr="ts" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String"/>
        <JsonPath Expr="subtype" Id="Subtype" Title="Subtype" Converter="String" DefaultValue=""/>
        <JsonPath Expr="user" Id="User" Title="User" Converter="String" DefaultValue=""/>
        <JsonPath Expr="username" Id="Username" Title="Username" Converter="String" DefaultValue=""/>
        <JsonPath Expr="text" Id="Text" Title="Text" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="MessagesSearch" Title="Messages Search" HelpText="Searches for messages matching a query." HelpUrl="https://api.slack.com/methods/search.messages">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="seotools"/>
		</Parameters>
		<Paging PageSize="100" EvenPages="true"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/search.messages?query=@(Utils.UrlEncode(Model.Query))
        &count=@(Model.PageCursor.NextTake)
        &page=@(Model.PageCursor.Page+1
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.messages.matches[*]">
        <JsonPath Expr="channel.id" Id="ChannelId" Title="Channel Id" Converter="String"/>
        <JsonPath Expr="channel.name" Id="ChannelName" Title="Channel Name" Converter="String"/>
        <JsonPath Expr="ts" Id="TextIdentifier" Title="Text Id" Converter="String"/>
        <JsonPath Expr="text" Id="Text" Title="Text" Converter="String"/>
        <Compute Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix">
          <Compute.Expr>
            <![CDATA[
              @Regex.Replace(Model.Inp,@"\.\d+","")
            ]]>
          </Compute.Expr>
          <JsonPath Expr="ts" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String"/>
        <JsonPath Expr="user" Id="User" Title="User" Converter="String" DefaultValue=""/>
        <JsonPath Expr="username" Id="Username" Title="Username" Converter="String" DefaultValue=""/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

</Suite>
