<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Knowledge" Title="Stack Exchange" Id="StackExchange" RequireVersion="9.5.4" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/StackExchange.xml" HelpUrl="http://seotoolsforexcel.com/stackexchange/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <DefaultOAuthAuthenticator StayAuthenticated="true" TokenName="access_token" AuthUrl="https://stackoverflow.com/oauth/dialog?client_id=14158&amp;redirect_uri={0}&amp;scope=no_expiry"/>

  <Resources>
    <Resource Id="Fail">
			<Fail>
				<JsonPath Expr="error_message"/>
			</Fail>
    </Resource>
    <Resource Id="SortingDefaults">
			<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
			<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
			<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
			<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
    </Resource>
    <Resource Id="Questions">
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="question_id" Id="QuestionId" Converter="Auto"/>
					<JsonPath Expr="title" Id="Title" Converter="String"/>
					<JsonPath Expr="creation_date" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="last_activity_date" Id="LastActivity" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="view_count" Id="Views" Converter="Int"/>
					<JsonPath Expr="answer_count" Id="Answers" Converter="Int"/>
					<JsonPath Expr="score" Id="Score" Converter="Int"/>
					<JsonPath Expr="is_answered" Id="Answered" Converter="Bool"/>
					<JsonPath Expr="accepted_answer_id" Id="AcceptedAnswer" Converter="Auto" DefaultValue=""/>
					<JsonPath Expr="owner.user_id" Id="OwnerId" Converter="Auto" DefaultValue=""/>
					<JsonPath Expr="owner.display_name" Id="OwnerName" Converter="String" DefaultValue=""/>
					<JsonPath Expr="owner.reputation" Id="Reputation" Converter="Int" DefaultValue=""/>
					<JsonPath Expr="owner.accept_rate" Id="AcceptRate" Converter="Auto" DefaultValue=""/>
					<JsonPath Expr="owner.link" Id="OwnerLink" Converter="String" DefaultValue=""/>
					<JsonPath Expr="closed_date" Id="Closed" Converter="DateTime" Converter.SourceFormat="Unix" Checked="false"/>
					<JsonPath Expr="closed_reason" Id="ClosedReason" Converter="String" Checked="false" DefaultValue=""/>
					<JsonPath Expr="csv(tags)" Id="Tags" Converter="Auto" DefaultValue=""/>
					<JsonPath Expr="link" Id="Link" Converter="String"/>
				</JsonPath>
			</Parse>
    </Resource>
    <Resource Id="Answers">
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="answer_id" Id="AnswerId" Converter="Auto"/>
					<JsonPath Expr="question_id" Id="Questionid" Converter="Auto"/>
					<Compute Expr="@Utils.StripTags(Model.Inp)" Id="Body" Converter="Auto">
						<JsonPath Expr="body" Id="Inp" DefaultValue=""/>
					</Compute>
					<JsonPath Expr="creation_date" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="comment_count" Id="Comments" Converter="Int"/>
					<JsonPath Expr="up_vote_count" Id="Upvotes" Converter="Int"/>
					<JsonPath Expr="down_vote_count" Id="Downvotes" Converter="Int"/>
					<JsonPath Expr="score" Id="Score" Converter="Int"/>
					<JsonPath Expr="link" Id="Link" Converter="String"/>
					<JsonPath Expr="owner.user_id" Id="OwnerId" Converter="Auto"/>
					<JsonPath Expr="owner.display_name" Id="OwnerName" Converter="String"/>
					<JsonPath Expr="owner.reputation" Id="Reputation" Converter="Int"/>
					<JsonPath Expr="owner.accept_rate" Id="AcceptRate" Converter="Int" DefaultValue="0"/>
					<JsonPath Expr="owner.link" Id="OwnerLink" Converter="String"/>
				</JsonPath>
			</Parse>
    </Resource>
    <Resource Id="Comments">
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="comment_id" Id="CommentId" Converter="Auto"/>
					<JsonPath Expr="post_id" Id="PostId" Converter="Auto"/>
					<JsonPath Expr="link" Id="Link" Converter="String"/>
					<Compute Expr="@Utils.StripTags(Model.Inp)" Id="Body">
						<JsonPath Expr="body" Id="Inp"/>
					</Compute>
					<JsonPath Expr="creation_date" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="score" Id="Score" Converter="Int"/>
					<JsonPath Expr="owner.user_id" Id="OwnerId" Converter="Auto"/>
					<JsonPath Expr="owner.display_name" Id="OwnerName" Converter="String"/>
					<JsonPath Expr="owner.reputation" Id="Reputation" Converter="Int"/>
					<JsonPath Expr="owner.accept_rate" Id="AcceptRate" Converter="Int" DefaultValue="0"/>
					<JsonPath Expr="owner.link" Id="OwnerLink" Converter="String"/>
				</JsonPath>
			</Parse>
    </Resource>
		<Resource Id="Users">
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="user_id" Id="UserId" Converter="Auto"/>
					<JsonPath Expr="display_name" Id="Name" Converter="Auto"/>
					<JsonPath Expr="reputation" Id="Reputation" Converter="Int"/>
					<JsonPath Expr="view_count" Id="Views" Converter="Int"/>
					<JsonPath Expr="up_vote_count" Id="Upvotes" Converter="Int"/>
					<JsonPath Expr="down_vote_count" Id="Downvotes" Converter="Int"/>
					<JsonPath Expr="answer_count" Id="Answers" Converter="Int"/>
					<JsonPath Expr="question_count" Id="Questions" Converter="Int"/>
					<JsonPath Expr="accept_rate" Id="AcceptRate" Converter="Int"/>
					<JsonPath Expr="badge_counts.bronze" Id="BronzeBadges" Converter="Int"/>
					<JsonPath Expr="badge_counts.silver" Id="SilverBadges" Converter="Int"/>
					<JsonPath Expr="badge_counts.gold" Id="GoldBadges" Converter="Int"/>
					<JsonPath Expr="user_type" Id="Type" Converter="String"/>
					<JsonPath Expr="creation_date" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="last_access_date" Id="Accessed" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="link" Id="Link" Converter="String"/>
				</JsonPath>
			</Parse>
		</Resource>
  </Resources>

  <RestConnector Id="Sites" HelpUrl="http://api.stackexchange.com/docs/sites" Hidden="true">
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/sites?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&pagesize=10000
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="items[*]">
        <JsonPath Expr="api_site_parameter" Id="Id" Title="Site Id"/>
				<Compute Expr="@Utils.HtmlDecode(Model.Inp)" Id="Name" Title="Site Name">
					<JsonPath Expr="name" Id="Inp"/>
				</Compute>
        <JsonPath Expr="audience" Id="Audience"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsSearchAdvanced" Title="Questions - Search Advanced" Group="Questions" HelpText="Searches a site for any questions which fit the given criteria." HelpUrl="http://api.stackexchange.com/docs/advanced-search">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Query" Title="Query (Searches all Fields)" Required="false" Debug.DefaultValue="excel" HelpText="A free form text parameter, will match all question properties based on an undocumented algorithm."/>
      <Text Id="UrlContains" Title="Contains URL (Supports Wildcards *)" Required="false" HelpText="A url which must be contained in a post, may include a wildcard."/>
      <Text Id="BodyContains" Title="Body Contains Text" Required="false" HelpText="Text which must appear in returned questions' bodies."/>
      <Text Id="TitleContains" Title="Title Contains Text" Required="false" HelpText="Text which must appear in returned questions' titles."/>
      <Text Id="OwnerFilter" Title="Asked by Owner Id" Required="false" HelpText="The id of the user who must own the questions returned."/>
      <Number Id="MinAnswerCount" Title="Min Answer Count" Required="false" HelpText="The minimum number of answers returned questions must have."/>
      <Number Id="MinViewCount" Title="Min View Count" Required="false" HelpText="The minimum number of views returned questions must have."/>
      <Select Id="AcceptedStatus" Title="Accepted Answer Status" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="true" Title="Accepted"/>
          <Item Id="false" Title="Unaccepted"/>
        </DataSource>
      </Select>
      <Select Id="QuestionStatus" Title="Question Status" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="true" Title="Closed"/>
          <Item Id="false" Title="Open"/>
        </DataSource>
      </Select>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
          <Item Id="relevance&amp;order=desc" Title="Relevance Descending"/>
          <Item Id="relevance&amp;order=asc" Title="Relevance Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/search/advanced?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &q=@Utils.UrlEncode(Model.Query)
        @(!string.IsNullOrEmpty(Model.UrlContains) ? "&url=" + Utils.UrlEncode(Model.UrlContains) : "")
        @(!string.IsNullOrEmpty(Model.BodyContains) ? "&body=" + Utils.UrlEncode(Model.BodyContains) : "")
        @(!string.IsNullOrEmpty(Model.TitleContains) ? "&title=" + Utils.UrlEncode(Model.TitleContains) : "")
        @(!string.IsNullOrEmpty(Model.OwnerFilter) ? "&user=" + Utils.UrlEncode(Model.OwnerFilter) : "")
        @(Model.AcceptedStatus != "all" ? "&accepted=" + Utils.UrlEncode(Model.AcceptedStatus) : "")
        @(Model.QuestionStatus != "all" ? "&closed=" + Utils.UrlEncode(Model.QuestionStatus) : "")
        @(Model.MinAnswerCount != 0 ? "&answers=" + Utils.UrlEncode(Model.MinAnswerCount) : "")
        @(Model.MinViewCount != 0 ? "&views=" + Utils.UrlEncode(Model.MinViewCount) : "")
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsSimiar" Title="Questions - Search Similar" Group="Questions" HelpUrl="http://api.stackexchange.com/docs/similar" HelpText="Returns questions which are similar to a hypothetical one based on title.">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Question" Title="Question" Required="true" DefaultValue="" Debug.DefaultValue=""/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
          <Item Id="relevance&amp;order=desc" Title="Relevance Descending"/>
          <Item Id="relevance&amp;order=asc" Title="Relevance Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/similar/?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &title=@Utils.UrlEncode(Model.Question)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsAnswers" Title="Questions - From Answers" Group="Questions" HelpText="Returns the questions that answers identifed by ids are on." HelpUrl="http://api.stackexchange.com/docs/questions-by-answer-ids">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Answer Ids" Required="true" Debug.DefaultValue="53996006" Multiline="true" HelpText="Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/answers/@(FetchBatch())/questions?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=100
				&filter=!)rCcHAVhNRqLcIjIPcD9
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsLookup" Title="Questions - Batch Lookup" Group="Questions" HelpText="Returns the questions identified in ids." HelpUrl="http://api.stackexchange.com/docs/questions-by-ids">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Question Ids" Required="true" Debug.DefaultValue="4469693" Multiline="true" HelpText="Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/questions/@(FetchBatch())?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=100
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsLinked" Title="Questions - Linked to Questions" Group="Questions" HelpText="Gets questions which link to those questions identified in ids." HelpUrl="http://api.stackexchange.com/docs/linked-questions	">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Question Ids" Required="true" Debug.DefaultValue="151005" Multiline="true" HelpText="Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
          <Item Id="rank&amp;order=desc" Title="Rank Descending"/>
          <Item Id="rank&amp;order=asc" Title="Rank Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/questions/@(FetchBatch())/linked?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsRelated" Title="Questions - Related Questions" Group="Questions" HelpText="Returns questions that the site considers related to those identified in ids." HelpUrl="http://api.stackexchange.com/docs/related-questions">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Question Ids" Required="true" Debug.DefaultValue="151005" Multiline="true" HelpText="Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
          <Item Id="rank&amp;order=desc" Title="Rank Descending"/>
          <Item Id="rank&amp;order=asc" Title="Rank Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/questions/@(FetchBatch())/related?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsFeatured" Title="Questions - Featured Questions" Group="Questions" HelpText="Returns all the questions with active bounties in the system." HelpUrl="http://api.stackexchange.com/docs/featured-questions">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/questions/featured?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsUsers" Title="Questions - From Users" Group="Questions" HelpText="Gets the questions asked by the users in ids." HelpUrl="http://api.stackexchange.com/docs/questions-on-users	">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" Debug.DefaultValue="151005" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/users/@(FetchBatch())/questions?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="QuestionsMe" Title="Questions - From Current User" Group="Questions" HelpText="Returns the questions owned by the current user." HelpUrl="http://api.stackexchange.com/docs/me-questions	">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/me/questions?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Questions"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="AnswersLookup" Title="Answers - Batch Lookup" Group="Answers" HelpText="Gets the set of answers identified by ids." HelpUrl="http://api.stackexchange.com/docs/answers-by-ids">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Answer Ids" Required="true" Debug.DefaultValue="53996006" Multiline="true" HelpText="Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
		</Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="2"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/answers/@(FetchBatch())?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=100
				&filter=!)rCcHAVhNRqLcIjIPcD9
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Answers"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="AnswersQuestions" Title="Answers - To Questions" Group="Answers" HelpText="Gets the answers to a set of questions identified in id." HelpUrl="http://api.stackexchange.com/docs/answers-on-questions">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Question Ids" Required="true" Debug.DefaultValue="34819557" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/questions/@(FetchBatch())/answers?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!)rCcHAVhNRqLcIjIPcD9
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Answers"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="AnswersUsers" Title="Answers - From Users" Group="Answers" HelpText="Returns the answers the users in ids have posted." HelpUrl="http://api.stackexchange.com/docs/answers-on-users">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" Debug.DefaultValue="4511444" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/users/@(FetchBatch())/answers?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!)rCcHAVhNRqLcIjIPcD9
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Answers"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="AnswersMe" Title="Answers - From Current User" Group="Answers" HelpText="Returns the answers owned by the current user." HelpUrl="http://api.stackexchange.com/docs/me-answers">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
          <Item Id="votes&amp;order=desc" Title="Votes Descending"/>
          <Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/me/answers?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!)rCcHAVhNRqLcIjIPcD9
        ]]>
      </Fetch.Url>
    </Fetch>
    <Resource Id="Answers"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="TagsList" Title="Tags - List Tags" Group="Tags" HelpText="Returns the tags found on a site." HelpUrl="http://api.stackexchange.com/docs/tags">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="InName" Title="In Name" Required="false" Debug.DefaultValue="own" HelpText="parameter lets a consumer filter down to tags that contain a certain substring"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
          <Item Id="popular&amp;order=desc" Title="Popular Descending"/>
          <Item Id="popular&amp;order=asc" Title="Popular Ascending"/>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="name&amp;order=desc" Title="Name Descending"/>
					<Item Id="name&amp;order=asc" Title="Name Ascending"/>
        </DataSource>
      </Select>
		</Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/tags?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        @(!string.IsNullOrEmpty(Model.InName) ? "&inname=" + Utils.UrlEncode(Model.InName) : "")
				&sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
		<Parse>
			<JsonPath Expr="items[*]">
				<JsonPath Expr="name" Id="Name" Converter="String"/>
				<JsonPath Expr="count" Id="Count" Converter="Long"/>
			</JsonPath>
		</Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="TagsUsers" Title="Tags - From Users Activity" Group="Tags" HelpText="Returns the tags the users identified in ids have been active in." HelpUrl="http://api.stackexchange.com/docs/tags-on-users">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" Debug.DefaultValue="4511444" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
          <Item Id="popular&amp;order=desc" Title="Popular Descending"/>
          <Item Id="popular&amp;order=asc" Title="Popular Ascending"/>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="name&amp;order=desc" Title="Name Descending"/>
					<Item Id="name&amp;order=asc" Title="Name Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/users/@(FetchBatch())/tags?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
		<Parse>
			<JsonPath Expr="items[*]">
				<JsonPath Expr="user_id" Id="UserId" Converter="Auto"/>
				<JsonPath Expr="name" Id="Name" Converter="String"/>
				<JsonPath Expr="count" Id="Count" Converter="Long"/>
			</JsonPath>
		</Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="TagsMe" Title="Tags - From Current User Activity" Group="Tags" HelpText="Returns the tags the current user have been active in." HelpUrl="http://api.stackexchange.com/docs/me-tags">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
          <Item Id="popular&amp;order=desc" Title="Popular Descending"/>
          <Item Id="popular&amp;order=asc" Title="Popular Ascending"/>
					<Item Id="activity&amp;order=desc" Title="Activity Descending"/>
					<Item Id="activity&amp;order=asc" Title="Activity Ascending"/>
					<Item Id="name&amp;order=desc" Title="Name Descending"/>
					<Item Id="name&amp;order=asc" Title="Name Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/me/tags?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
        ]]>
      </Fetch.Url>
    </Fetch>
		<Parse>
			<JsonPath Expr="items[*]">
				<JsonPath Expr="user_id" Id="UserId" Converter="Auto"/>
				<JsonPath Expr="name" Id="Name" Converter="String"/>
				<JsonPath Expr="count" Id="Count" Converter="Long"/>
			</JsonPath>
		</Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UsersLookup" Title="Users - Batch Lookup" Group="Users" HelpText="Gets the users identified in ids." HelpUrl="http://api.stackexchange.com/docs/users-by-ids">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" Debug.DefaultValue="4511444" Multiline="true" HelpText="Ids separated by newline"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="reputation" Required="false">
        <DataSource>
          <Item Id="reputation&amp;order=desc" Title="Reputation Descending"/>
          <Item Id="reputation&amp;order=asc" Title="Reputation Ascending"/>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="name&amp;order=desc" Title="Name Descending"/>
					<Item Id="name&amp;order=asc" Title="Name Ascending"/>
					<Item Id="modified&amp;order=desc" Title="Modified Descending"/>
					<Item Id="modified&amp;order=asc" Title="Modified Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				https://api.stackexchange.com/2.2/users/@(FetchBatch())?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        &pagesize=100
				&filter=!-*jbN*IioeJ6
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Users"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsPosts" Title="Comments - To Posts" Group="Comments" HelpText="Gets the comments on the posts identified in ids, regardless of the type of the posts." HelpUrl="http://api.stackexchange.com/docs/comments-on-posts">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="Post Ids" Required="true" DefaultValue="" Debug.DefaultValue="34819557" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
					<Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/posts/@(FetchBatch())/comments?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Comments"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsUsers" Title="Comments - From Users" Group="Comments" HelpText="Get the comments posted by users in ids." HelpUrl="http://api.stackexchange.com/docs/comments-on-users">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" DefaultValue="" Debug.DefaultValue="4511444" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
					<Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/users/@(FetchBatch())/comments?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Comments"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsMe" Title="Comments - From Current User" Group="Comments" HelpText="Get the comments posted by the current user." HelpUrl="http://api.stackexchange.com/docs/me-comments">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
					<Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/me/comments?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Comments"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsMentionUsers" Title="Comments - Mentions Users" Group="Comments" HelpText="Gets all the comments that the users in ids were mentioned in." HelpUrl="http://api.stackexchange.com/docs/mentions-on-users">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" DefaultValue="" Debug.DefaultValue="4511444" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
					<Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/users/@(FetchBatch())/mentioned?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Comments"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsMentionMe" Title="Comments - Mentions Current User" Group="Comments" HelpText="Gets all the comments that mentions the current user." HelpUrl="http://api.stackexchange.com/docs/me-mentioned">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Select Id="Sorting" Title="Sorting" DefaultValue="activity" Required="false">
        <DataSource>
					<Item Id="creation&amp;order=desc" Title="Creation Descending"/>
					<Item Id="creation&amp;order=asc" Title="Creation Ascending"/>
					<Item Id="votes&amp;order=desc" Title="Votes Descending"/>
					<Item Id="votes&amp;order=asc" Title="Votes Ascending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/me/mentioned?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        &sort=@(Model.Sorting)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
		<Resource Id="Comments"/>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="ReputationUsersChanges" Title="Reputation - Users Changes" Group="Reputation" HelpText="Gets a subset of the reputation changes for users in ids." HelpUrl="http://api.stackexchange.com/docs/reputation-on-users">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <Text Id="Ids" Title="User Ids" Required="true" DefaultValue="" Debug.DefaultValue="4511444" Multiline="true" HelpText="Up to 100 Ids separated by newline"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/users/@(FetchBatch())/reputation?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="user_id" Id="UserId" Converter="Auto"/>
					<JsonPath Expr="on_date" Id="Date" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="reputation_change" Id="Change" Converter="Long"/>
					<JsonPath Expr="post_id" Id="PostId" Converter="Auto"/>
					<JsonPath Expr="vote_type" Id="VoteType" Converter="String"/>
					<JsonPath Expr="post_type" Id="PostType" Converter="String"/>
				</JsonPath>
			</Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="ReputationMeChanges" Title="Reputation - Current User Changes" Group="Reputation" HelpText="Returns the reputation changed for the current user." HelpUrl="http://api.stackexchange.com/docs/me-reputation">
    <Parameters>
      <Text Id="Site" Title="Site" Required="true" DefaultValue="stackoverflow" HelpText="Selects a specific site in the Stack Exchange network." Select.Connector="Sites"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
    </Parameters>
    <Paging PageSize="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.stackexchange.com/2.2/me/reputation?access_token=@(Model.Authenticator.Token)&key=OvqHAhlnGYqFCHK0B1hm9w((&site=@(Model.Site)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
					@: &fromdate=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
					@: &todate=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        &pagesize=@(Model.PageCursor.PageSize)
        &page=@(Model.PageCursor.Page+1)
				&filter=!-*f(6skrMO)s
        ]]>
      </Fetch.Url>
    </Fetch>
			<Parse>
				<JsonPath Expr="items[*]">
					<JsonPath Expr="user_id" Id="UserId" Converter="Auto"/>
					<JsonPath Expr="on_date" Id="Date" Converter="DateTime" Converter.SourceFormat="Unix"/>
					<JsonPath Expr="reputation_change" Id="Change" Converter="Long"/>
					<JsonPath Expr="post_id" Id="PostId" Converter="Auto"/>
					<JsonPath Expr="vote_type" Id="VoteType" Converter="String"/>
					<JsonPath Expr="post_type" Id="PostType" Converter="String"/>
				</JsonPath>
			</Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    string FetchBatch() {
      string[] lines = ((string)Model.Ids).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).Take(100).ToArray();
      return string.Join(";",lines.Select(e => Utils.UrlEncode(e)).ToArray());
    }
    ]]>
  </RazorFunctions>

</Suite>
