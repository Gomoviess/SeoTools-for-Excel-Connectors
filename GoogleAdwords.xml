<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="SEO" Title="Google Adwords" Id="GoogleAdwords" RequireVersion="9.5.4" LoginButton="https://seotoolsforexcel.com/logins/google.png" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/GoogleAdwords.xml" HelpUrl="http://seotoolsforexcel.com/google-adwords/">

  <GoogleOAuth2Authenticator ClientId="" ClientSecret="" Scope="https://www.googleapis.com/auth/adwords" StayAuthenticated="true"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/adwords/">
    <Text Id="DeveloperToken" Title="Developer Token" Required="true" HelpUrl="http://seotoolsforexcel.com/adwords/"/>
		<Select Id="PrefLocation" Title="Preferred Location" DefaultValue="all">
      <Resource Id="Locations"/>
    </Select>
		<Select Id="PrefLanguage" Title="Preferred Language" DefaultValue="all">
      <Resource Id="Languages"/>
    </Select>
  </Settings>

  <Resources>
    <Resource Id="FailAWQL">
			<Fail>
				<XPath Id="FindError" Expr="//apierror/type"/>
			</Fail>
    </Resource>
    <Resource Id="FailSOAP">
      <Fail>
        <XPath Expr="//faultstring"/>
      </Fail>
    </Resource>
		<Resource Id="HttpSettingsAWQL">
			<RequestHeaders>
				<Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
				<Header Name='clientCustomerId'><![CDATA[@(Model.CustomerId)]]></Header>
				<Header Name='developerToken'><![CDATA[@(Model.DeveloperToken)]]></Header>
			</RequestHeaders>
			<RequestMethod>POST</RequestMethod>
			<RequestContentType>application/x-www-form-urlencoded</RequestContentType>
		</Resource>
		<Resource Id="HttpSettingsSOAP">
			<RequestHeaders>
				<Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
			</RequestHeaders>
			<RequestMethod>POST</RequestMethod>
			<RequestContentType>application/soap+xml</RequestContentType>
		</Resource>
		<Resource Id="PerformanceFields">
			<Xpath Expr="." Attribute="activeViewAvgCPM" Id="ActiveViewCpm" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="activeViewViewableCTR" Id="ActiveViewCtr" Converter="Double"/>
			<Xpath Expr="." Attribute="activeViewViewableImpressions" Id="ActiveViewImpressions" Converter="Long"/>
			<Xpath Expr="." Attribute="activeViewMeasurableImprImpr" Id="ActiveViewMeasurability" Converter="Double"/>
			<Xpath Expr="." Attribute="activeViewMeasurableCost" Id="ActiveViewMeasurableCost" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="activeViewMeasurableImpr" Id="ActiveViewMeasurableImpressions" Converter="Long"/>
			<Xpath Expr="." Attribute="convRate" Id="ConversionRate" Converter="Double"/>
			<Xpath Expr="." Attribute="conv" Id="Conversions" Converter="Double"/>
			<Xpath Expr="." Attribute="convValue" Id="ConversionValue" Converter="Double"/>
			<Xpath Expr="." Attribute="avgCost" Id="AverageCost" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="avgCPM" Id="AverageCpm" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="avgCPV" Id="AverageCpv" Converter="Double"/>
			<Xpath Expr="." Attribute="pagesSession" Id="AveragePageviews" Converter="Double"/>
			<Xpath Expr="." Attribute="avgPosition" Id="AveragePosition" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="avgSessionDurationSeconds" Id="AverageTimeOnSite" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="bounceRate" Id="BounceRate" Converter="Double"/>
			<Xpath Expr="." Attribute="clicks" Id="Clicks" Converter="Long"/>
			<Xpath Expr="." Attribute="cost" Id="Cost" Converter="Double" Converter.SourceFormat="Micro" DefaultValue="0"/>
			<Xpath Expr="." Attribute="ctr" Id="Ctr" Converter="Double"/>
			<Xpath Expr="." Attribute="engagementRate" Id="EngagementRate" Converter="Double"/>
			<Xpath Expr="." Attribute="engagements" Id="Engagements" Converter="Double"/>
			<Xpath Expr="." Attribute="impressions" Id="Impressions" Converter="Double"/>
			<Xpath Expr="." Attribute="interactionRate" Id="InteractionRate" Converter="Double"/>
			<Xpath Expr="." Attribute="interactions" Id="Interactions" Converter="Double"/>
			<Xpath Expr="." Attribute="newSessions" Id="PercentNewVisitors" Converter="Double"/>
			<Xpath Expr="." Attribute="views" Id="VideoViews" Converter="Double"/>
		</Resource>
		<Resource Id="Locations">
			<DataSource>
				<Item Id="all" Title="[All]"/>
				<Item Id="2004" Title="Afghanistan"/>
				<Item Id="2008" Title="Albania"/>
				<Item Id="2012" Title="Algeria"/>
				<Item Id="2016" Title="American Samoa"/>
				<Item Id="2020" Title="Andorra"/>
				<Item Id="2024" Title="Angola"/>
				<Item Id="2010" Title="Antarctica"/>
				<Item Id="2028" Title="Antigua and Barbuda"/>
				<Item Id="2032" Title="Argentina"/>
				<Item Id="2051" Title="Armenia"/>
				<Item Id="2036" Title="Australia"/>
				<Item Id="2040" Title="Austria"/>
				<Item Id="2031" Title="Azerbaijan"/>
				<Item Id="2048" Title="Bahrain"/>
				<Item Id="2050" Title="Bangladesh"/>
				<Item Id="2052" Title="Barbados"/>
				<Item Id="2112" Title="Belarus"/>
				<Item Id="2056" Title="Belgium"/>
				<Item Id="2084" Title="Belize"/>
				<Item Id="2204" Title="Benin"/>
				<Item Id="2064" Title="Bhutan"/>
				<Item Id="2068" Title="Bolivia"/>
				<Item Id="2070" Title="Bosnia and Herzegovina"/>
				<Item Id="2072" Title="Botswana"/>
				<Item Id="2076" Title="Brazil"/>
				<Item Id="2096" Title="Brunei Darussalam"/>
				<Item Id="2100" Title="Bulgaria"/>
				<Item Id="2854" Title="Burkina Faso"/>
				<Item Id="2108" Title="Burundi"/>
				<Item Id="2116" Title="Cambodia"/>
				<Item Id="2120" Title="Cameroon"/>
				<Item Id="2124" Title="Canada"/>
				<Item Id="2132" Title="Cape Verde"/>
				<Item Id="2140" Title="Central African Republic"/>
				<Item Id="2148" Title="Chad"/>
				<Item Id="2152" Title="Chile"/>
				<Item Id="2156" Title="China"/>
				<Item Id="2162" Title="Christmas Island"/>
				<Item Id="2166" Title="Cocos (Keeling) Islands"/>
				<Item Id="2170" Title="Colombia"/>
				<Item Id="2174" Title="Comoros"/>
				<Item Id="2178" Title="Congo"/>
				<Item Id="2184" Title="Cook Islands"/>
				<Item Id="2188" Title="Costa Rica"/>
				<Item Id="2384" Title="Cote d'Ivoire"/>
				<Item Id="2191" Title="Croatia"/>
				<Item Id="2196" Title="Cyprus"/>
				<Item Id="2203" Title="Czech Republic"/>
				<Item Id="2180" Title="Democratic Republic of the Congo"/>
				<Item Id="2208" Title="Denmark"/>
				<Item Id="2262" Title="Djibouti"/>
				<Item Id="2212" Title="Dominica"/>
				<Item Id="2214" Title="Dominican Republic"/>
				<Item Id="2218" Title="Ecuador"/>
				<Item Id="2818" Title="Egypt"/>
				<Item Id="2222" Title="El Salvador"/>
				<Item Id="2226" Title="Equatorial Guinea"/>
				<Item Id="2232" Title="Eritrea"/>
				<Item Id="2233" Title="Estonia"/>
				<Item Id="2231" Title="Ethiopia"/>
				<Item Id="2242" Title="Fiji"/>
				<Item Id="2246" Title="Finland"/>
				<Item Id="2250" Title="France"/>
				<Item Id="2258" Title="French Polynesia"/>
				<Item Id="2260" Title="French Southern and Antarctic Lands"/>
				<Item Id="2266" Title="Gabon"/>
				<Item Id="2268" Title="Georgia"/>
				<Item Id="2276" Title="Germany"/>
				<Item Id="2288" Title="Ghana"/>
				<Item Id="2300" Title="Greece"/>
				<Item Id="2308" Title="Grenada"/>
				<Item Id="2316" Title="Guam"/>
				<Item Id="2320" Title="Guatemala"/>
				<Item Id="2324" Title="Guinea"/>
				<Item Id="2624" Title="Guinea-Bissau"/>
				<Item Id="2328" Title="Guyana"/>
				<Item Id="2332" Title="Haiti"/>
				<Item Id="2334" Title="Heard Island and McDonald Islands"/>
				<Item Id="2340" Title="Honduras"/>
				<Item Id="2348" Title="Hungary"/>
				<Item Id="2352" Title="Iceland"/>
				<Item Id="2356" Title="India"/>
				<Item Id="2360" Title="Indonesia"/>
				<Item Id="2368" Title="Iraq"/>
				<Item Id="2372" Title="Ireland"/>
				<Item Id="2376" Title="Israel"/>
				<Item Id="2380" Title="Italy"/>
				<Item Id="2388" Title="Jamaica"/>
				<Item Id="2392" Title="Japan"/>
				<Item Id="2400" Title="Jordan"/>
				<Item Id="2398" Title="Kazakhstan"/>
				<Item Id="2404" Title="Kenya"/>
				<Item Id="2296" Title="Kiribati"/>
				<Item Id="2414" Title="Kuwait"/>
				<Item Id="2417" Title="Kyrgyzstan"/>
				<Item Id="2418" Title="Laos"/>
				<Item Id="2428" Title="Latvia"/>
				<Item Id="2422" Title="Lebanon"/>
				<Item Id="2426" Title="Lesotho"/>
				<Item Id="2430" Title="Liberia"/>
				<Item Id="2434" Title="Libya"/>
				<Item Id="2438" Title="Liechtenstein"/>
				<Item Id="2440" Title="Lithuania"/>
				<Item Id="2442" Title="Luxembourg"/>
				<Item Id="2807" Title="Macedonia (FYROM)"/>
				<Item Id="2450" Title="Madagascar"/>
				<Item Id="2454" Title="Malawi"/>
				<Item Id="2458" Title="Malaysia"/>
				<Item Id="2462" Title="Maldives"/>
				<Item Id="2466" Title="Mali"/>
				<Item Id="2470" Title="Malta"/>
				<Item Id="2584" Title="Marshall Islands"/>
				<Item Id="2478" Title="Mauritania"/>
				<Item Id="2480" Title="Mauritius"/>
				<Item Id="2484" Title="Mexico"/>
				<Item Id="2583" Title="Micronesia"/>
				<Item Id="2498" Title="Moldova"/>
				<Item Id="2492" Title="Monaco"/>
				<Item Id="2496" Title="Mongolia"/>
				<Item Id="2499" Title="Montenegro"/>
				<Item Id="2504" Title="Morocco"/>
				<Item Id="2508" Title="Mozambique"/>
				<Item Id="2516" Title="Namibia"/>
				<Item Id="2520" Title="Nauru"/>
				<Item Id="2524" Title="Nepal"/>
				<Item Id="2528" Title="Netherlands"/>
				<Item Id="2540" Title="New Caledonia"/>
				<Item Id="2554" Title="New Zealand"/>
				<Item Id="2558" Title="Nicaragua"/>
				<Item Id="2562" Title="Niger"/>
				<Item Id="2566" Title="Nigeria"/>
				<Item Id="2570" Title="Niue"/>
				<Item Id="2574" Title="Norfolk Island"/>
				<Item Id="2580" Title="Northern Mariana Islands"/>
				<Item Id="2578" Title="Norway"/>
				<Item Id="2512" Title="Oman"/>
				<Item Id="2586" Title="Pakistan"/>
				<Item Id="2585" Title="Palau"/>
				<Item Id="2591" Title="Panama"/>
				<Item Id="2598" Title="Papua New Guinea"/>
				<Item Id="2600" Title="Paraguay"/>
				<Item Id="2604" Title="Peru"/>
				<Item Id="2608" Title="Philippines"/>
				<Item Id="2612" Title="Pitcairn Islands"/>
				<Item Id="2616" Title="Poland"/>
				<Item Id="2620" Title="Portugal"/>
				<Item Id="2634" Title="Qatar"/>
				<Item Id="2642" Title="Romania"/>
				<Item Id="2643" Title="Russia"/>
				<Item Id="2646" Title="Rwanda"/>
				<Item Id="2654" Title="Saint Helena"/>
				<Item Id="2659" Title="Saint Kitts and Nevis"/>
				<Item Id="2662" Title="Saint Lucia"/>
				<Item Id="2666" Title="Saint Pierre and Miquelon"/>
				<Item Id="2670" Title="Saint Vincent and the Grenadines"/>
				<Item Id="2882" Title="Samoa"/>
				<Item Id="2674" Title="San Marino"/>
				<Item Id="2678" Title="Sao Tome and Principe"/>
				<Item Id="2682" Title="Saudi Arabia"/>
				<Item Id="2686" Title="Senegal"/>
				<Item Id="2688" Title="Serbia"/>
				<Item Id="2690" Title="Seychelles"/>
				<Item Id="2694" Title="Sierra Leone"/>
				<Item Id="2702" Title="Singapore"/>
				<Item Id="2703" Title="Slovakia"/>
				<Item Id="2705" Title="Slovenia"/>
				<Item Id="2090" Title="Solomon Islands"/>
				<Item Id="2706" Title="Somalia"/>
				<Item Id="2710" Title="South Africa"/>
				<Item Id="2239" Title="South Georgia and the South Sandwich Islands"/>
				<Item Id="2410" Title="South Korea"/>
				<Item Id="2724" Title="Spain"/>
				<Item Id="2144" Title="Sri Lanka"/>
				<Item Id="2740" Title="Suriname"/>
				<Item Id="2748" Title="Swaziland"/>
				<Item Id="2752" Title="Sweden"/>
				<Item Id="2756" Title="Switzerland"/>
				<Item Id="2762" Title="Tajikistan"/>
				<Item Id="2834" Title="Tanzania"/>
				<Item Id="2764" Title="Thailand"/>
				<Item Id="2044" Title="The Bahamas"/>
				<Item Id="2270" Title="The Gambia"/>
				<Item Id="2626" Title="Timor-Leste"/>
				<Item Id="2768" Title="Togo"/>
				<Item Id="2772" Title="Tokelau"/>
				<Item Id="2776" Title="Tonga"/>
				<Item Id="2780" Title="Trinidad and Tobago"/>
				<Item Id="2788" Title="Tunisia"/>
				<Item Id="2792" Title="Turkey"/>
				<Item Id="2795" Title="Turkmenistan"/>
				<Item Id="2798" Title="Tuvalu"/>
				<Item Id="2800" Title="Uganda"/>
				<Item Id="2804" Title="Ukraine"/>
				<Item Id="2784" Title="United Arab Emirates"/>
				<Item Id="2826" Title="United Kingdom"/>
				<Item Id="2840" Title="United States"/>
				<Item Id="2581" Title="United States Minor Outlying Islands"/>
				<Item Id="2858" Title="Uruguay"/>
				<Item Id="2860" Title="Uzbekistan"/>
				<Item Id="2876" Title="Wallis and Futuna"/>
				<Item Id="2548" Title="Vanuatu"/>
				<Item Id="2336" Title="Vatican City"/>
				<Item Id="2862" Title="Venezuela"/>
				<Item Id="2704" Title="Vietnam"/>
				<Item Id="2887" Title="Yemen"/>
				<Item Id="2894" Title="Zambia"/>
				<Item Id="2716" Title="Zimbabwe"/>
			</DataSource>
		</Resource>
		<Resource Id="Languages">
			<DataSource>
				<Item Id="all" Title="[All]"/>
				<Item Id="1019" Title="Arabic"/>
				<Item Id="1020" Title="Bulgarian"/>
				<Item Id="1038" Title="Catalan"/>
				<Item Id="1017" Title="Chinese (simplified)"/>
				<Item Id="1018" Title="Chinese (traditional)"/>
				<Item Id="1039" Title="Croatian"/>
				<Item Id="1021" Title="Czech"/>
				<Item Id="1009" Title="Danish"/>
				<Item Id="1010" Title="Dutch"/>
				<Item Id="1000" Title="English"/>
				<Item Id="1043" Title="Estonian"/>
				<Item Id="1042" Title="Filipino"/>
				<Item Id="1011" Title="Finnish"/>
				<Item Id="1002" Title="French"/>
				<Item Id="1001" Title="German"/>
				<Item Id="1022" Title="Greek"/>
				<Item Id="1027" Title="Hebrew"/>
				<Item Id="1023" Title="Hindi"/>
				<Item Id="1024" Title="Hungarian"/>
				<Item Id="1026" Title="Icelandic"/>
				<Item Id="1025" Title="Indonesian"/>
				<Item Id="1004" Title="Italian"/>
				<Item Id="1005" Title="Japanese"/>
				<Item Id="1012" Title="Korean"/>
				<Item Id="1028" Title="Latvian"/>
				<Item Id="1029" Title="Lithuanian"/>
				<Item Id="1013" Title="Norwegian"/>
				<Item Id="1030" Title="Polish"/>
				<Item Id="1014" Title="Portuguese"/>
				<Item Id="1032" Title="Romanian"/>
				<Item Id="1031" Title="Russian"/>
				<Item Id="1035" Title="Serbian"/>
				<Item Id="1033" Title="Slovak"/>
				<Item Id="1034" Title="Slovenian"/>
				<Item Id="1003" Title="Spanish"/>
				<Item Id="1015" Title="Swedish"/>
				<Item Id="1044" Title="Thai"/>
				<Item Id="1037" Title="Turkish"/>
				<Item Id="1036" Title="Ukrainian"/>
				<Item Id="1041" Title="Urdu"/>
				<Item Id="1040" Title="Vietnamese"/>
			</DataSource>
		</Resource>
  </Resources>

  <RestConnector Id="Customers" Title="Customers" Hidden="true">
    <Fetch>
      <HttpSettings>
        <Resource Id="HttpSettingsSOAP"/>
        <RequestBody>
          <![CDATA[
					<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
						 <s:Header>
								<RequestHeader xmlns="https://adwords.google.com/api/adwords/mcm/v201809">
									 <developerToken xmlns="https://adwords.google.com/api/adwords/cm/v201809">@(Model.DeveloperToken)</developerToken>
									 <userAgent xmlns="https://adwords.google.com/api/adwords/cm/v201809">SeoTools</userAgent>
								</RequestHeader>
						 </s:Header>
						 <s:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<getCustomers xmlns="https://adwords.google.com/api/adwords/mcm/v201809" />
						 </s:Body>
					</s:Envelope>
          ]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://adwords.google.com/api/adwords/mcm/v201809/CustomerService
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <Xpath Expr="//getCustomersResponse/rval">
				<Xpath Expr="customerId" Id="CustomerId" Title="Customer Id"/>
				<Xpath Expr="descriptiveName" Id="CustomerName" Title="Customer Name"/>
				<Xpath Expr="currencycode" Id="Currency"/>
      </Xpath>
    </Parse>
    <Resource Id="FailSOAP"/>
  </RestConnector>

	<RestConnector Id="Campaigns" Title="Campaigns" Group="Performance Reports">
		<Parameters>
		  <Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="CampaignId" Title="Campaign Id" HelpText="Get fields for campaign with specific id"/>
			<Text Id="CustomWhere" Title="AWQL WHERE statement" HelpText="Filter results using the AWQL. Example: Impressions &gt; 1000" HelpUrl="https://seotoolsforexcel.com/google-adwords/"/>
    </Parameters>
		<Paging PageSize="10000"/>
    <Fetch>
      <HttpSettings>
				<Resource Id="HttpSettingsAWQL"/>
				<RequestForm>
          <Param Name='__rdquery'>
					<![CDATA[
					@{
						List<string> criteria = new List<string>();
						string where = string.Empty;

						if(!string.IsNullOrEmpty(Model.CampaignId)) {
							criteria.Add("CampaignId = " + Model.CampaignId);
						}

						if(!string.IsNullOrEmpty(Model.CustomWhere)) {
							criteria.Add(AdjustWhere());
						}

						if(criteria.Count() > 0)
							where = "WHERE " + string.Join(" AND ", criteria);
					}
					@GetSELECT()
					FROM CAMPAIGN_PERFORMANCE_REPORT
					@where
					]]>
					</Param>
          <Param Name='__fmt'>XML</Param>
				</RequestForm>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
					https://adwords.google.com/api/adwords/reportdownload/v201809
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Xpath Expr="//row">
				<Xpath Expr="." Attribute="campaignID" Id="CampaignId" Converter="String"/>
				<Xpath Expr="." Attribute="campaign" Id="CampaignName" Converter="String"/>
				<Xpath Expr="." Attribute="budgetID" Id="BudgetId" Converter="String"/>
				<Xpath Expr="." Attribute="startDate" Id="StartDate" Converter="Auto" DefaultValue=""/>
				<Xpath Expr="." Attribute="endDate" Id="EndDate" Converter="Auto" DefaultValue=""/>
				<Xpath Expr="." Attribute="campaignState" Id="CampaignStatus" Converter="String"/>
				<Xpath Expr="." Attribute="campaignServingStatus" Id="ServingStatus" Converter="String"/>
				<Xpath Expr="." Attribute="network" Id="AdNetworkType1" Converter="String"/>
				<Xpath Expr="." Attribute="networkWithSearchPartners" Id="AdNetworkType2" Converter="String"/>
				<Xpath Expr="." Attribute="budget" Id="Amount" Converter="Double" Converter.SourceFormat="Micro"/>
				<Resource Id="PerformanceFields"/>
			</Xpath>
		</Parse>
		<Resource Id="FailAWQL"/>
  </RestConnector>

	<RestConnector Id="AdGroups" Title="Ad Groups" Group="Performance Reports">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="CampaignId" Title="Campaign Id" HelpText="Get fields for campaign with specific id"/>
			<Text Id="AdGroupId" Title="AdGroup Id" HelpText="Get fields for adgroup with specific id"/>
			<Text Id="CustomWhere" Title="AWQL WHERE statement" HelpText="Filter results using the AWQL. Example: Impressions &gt; 1000" HelpUrl="https://seotoolsforexcel.com/google-adwords/"/>
    </Parameters>
		<Paging PageSize="10000"/>
    <Fetch>
      <HttpSettings>
				<Resource Id="HttpSettingsAWQL"/>
				<RequestForm>
          <Param Name='__rdquery'>
					<![CDATA[
					@{
						List<string> criteria = new List<string>();
						string where = string.Empty;

						if(!string.IsNullOrEmpty(Model.CampaignId)) {
							criteria.Add("CampaignId = " + Model.CampaignId);
						}

						if(!string.IsNullOrEmpty(Model.AdGroupId)) {
							criteria.Add("AdGroupId = " + Model.AdGroupId);
						}

						if(!string.IsNullOrEmpty(Model.CustomWhere)) {
							criteria.Add(AdjustWhere());
						}

						if(criteria.Count() > 0)
							where = "WHERE " + string.Join(" AND ", criteria);
					}
					@GetSELECT()
					FROM ADGROUP_PERFORMANCE_REPORT
					@where
					]]>
					</Param>
          <Param Name='__fmt'>XML</Param>
				</RequestForm>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
					https://adwords.google.com/api/adwords/reportdownload/v201809
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Xpath Expr="//row">
				<Xpath Expr="." Attribute="adGroupID" Id="AdGroupId" Converter="String"/>
				<Xpath Expr="." Attribute="adGroup" Id="AdGroupName" Converter="String"/>
				<Xpath Expr="." Attribute="campaignID" Id="CampaignId" Converter="String"/>
				<Xpath Expr="." Attribute="campaign" Id="CampaignName" Converter="String"/>
				<Xpath Expr="." Attribute="adGroupState" Id="AdGroupStatus" Converter="String"/>
				<Xpath Expr="." Attribute="adGroupType" Id="AdGroupType" Converter="String"/>
				<Xpath Expr="." Attribute="network" Id="AdNetworkType1" Converter="String"/>
				<Xpath Expr="." Attribute="networkWithSearchPartners" Id="AdNetworkType2" Converter="String"/>
				<Resource Id="PerformanceFields"/>
      </Xpath>
		</Parse>
		<Resource Id="FailAWQL"/>
  </RestConnector>

	<RestConnector Id="Keywords" Title="Keywords" Group="Performance Reports">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="CampaignId" Title="Campaign Id" HelpText="Get fields for campaign with specific id"/>
			<Text Id="AdGroupId" Title="AdGroup Id" HelpText="Get fields for adgroup with specific id"/>
			<Text Id="KeywordId" Title="Keyword Id" HelpText="Get fields for keyword with specific id"/>
			<Text Id="CustomWhere" Title="AWQL WHERE statement" HelpText="Filter results using the AWQL. Example: Impressions &gt; 1000" HelpUrl="https://seotoolsforexcel.com/google-adwords/"/>
    </Parameters>
		<Paging PageSize="10000"/>
    <Fetch>
      <HttpSettings>
				<Resource Id="HttpSettingsAWQL"/>
				<RequestForm>
          <Param Name='__rdquery'>
					<![CDATA[
					@{
						List<string> criteria = new List<string>();
						string where = string.Empty;

						if(!string.IsNullOrEmpty(Model.CampaignId)) {
							criteria.Add("CampaignId = " + Model.CampaignId);
						}

						if(!string.IsNullOrEmpty(Model.AdGroupId)) {
							criteria.Add("AdGroupId = " + Model.AdGroupId);
						}

						if(!string.IsNullOrEmpty(Model.KeywordId)) {
							criteria.Add("Id = " + Model.KeywordId);
						}

						if(!string.IsNullOrEmpty(Model.CustomWhere)) {
							criteria.Add(AdjustWhere());
						}

						if(criteria.Count() > 0)
							where = "WHERE " + string.Join(" AND ", criteria);
					}
					@GetSELECT()
					FROM KEYWORDS_PERFORMANCE_REPORT
					@where
					]]>
					</Param>
          <Param Name='__fmt'>XML</Param>
				</RequestForm>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
					https://adwords.google.com/api/adwords/reportdownload/v201809
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Xpath Expr="//row">
				<Xpath Expr="." Attribute="keywordID" Id="Id" Converter="String"/>
				<Xpath Expr="." Attribute="keyword" Id="Criteria" Title="KeywordText" Converter="String"/>
				<Xpath Expr="." Attribute="adGroupID" Id="AdGroupId" Converter="String"/>
				<Xpath Expr="." Attribute="adGroup" Id="AdGroupName" Converter="String"/>
				<Xpath Expr="." Attribute="campaignID" Id="CampaignId" Converter="String"/>
				<Xpath Expr="." Attribute="campaign" Id="CampaignName" Converter="String"/>
				<Xpath Expr="." Attribute="matchType" Id="KeywordMatchType" Converter="String"/>
				<Xpath Expr="." Attribute="approvalStatus" Id="ApprovalStatus" Converter="String"/>
				<Xpath Expr="." Attribute="keywordState" Id="Status" Converter="String"/>
				<Xpath Expr="." Attribute="criterionServingStatus" Id="SystemServingStatus" Converter="String"/>
				<Resource Id="PerformanceFields"/>
      </Xpath>
		</Parse>
		<Resource Id="FailAWQL"/>
  </RestConnector>

	<RestConnector Id="Ads" Title="Ads" Group="Performance Reports">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="CampaignId" Title="Campaign Id" HelpText="Get fields for campaign with specific id"/>
			<Text Id="AdGroupId" Title="AdGroup Id" Debug.DefaultValue="20591472781" HelpText="Get fields for adgroup with specific id"/>
			<Text Id="AdId" Title="Ad Id" HelpText="Get fields for ad with specific id"/>
			<Text Id="CustomWhere" Title="AWQL WHERE statement" HelpText="Filter results using the AWQL. Example: Impressions &gt; 1000" HelpUrl="https://seotoolsforexcel.com/google-adwords/"/>
    </Parameters>
		<Paging PageSize="10000"/>
    <Fetch>
      <HttpSettings>
				<Resource Id="HttpSettingsAWQL"/>
				<RequestForm>
          <Param Name='__rdquery'>
					<![CDATA[
					@{
						List<string> criteria = new List<string>();
						string where = string.Empty;

						if(!string.IsNullOrEmpty(Model.CampaignId)) {
							criteria.Add("CampaignId = " + Model.CampaignId);
						}

						if(!string.IsNullOrEmpty(Model.AdGroupId)) {
							criteria.Add("AdGroupId = " + Model.AdGroupId);
						}

						if(!string.IsNullOrEmpty(Model.AdId)) {
							criteria.Add("Id = " + Model.AdId);
						}

						if(!string.IsNullOrEmpty(Model.CustomWhere)) {
							criteria.Add(AdjustWhere());
						}

						if(criteria.Count() > 0)
							where = "WHERE " + string.Join(" AND ", criteria);
					}
					@GetSELECT()
					FROM AD_PERFORMANCE_REPORT
					@where
					]]>
					</Param>
          <Param Name='__fmt'>XML</Param>
				</RequestForm>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
					https://adwords.google.com/api/adwords/reportdownload/v201809
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Xpath Expr="//row">
				<Xpath Expr="." Attribute="adID" Id="Id" Converter="String"/>
				<Xpath Expr="." Attribute="adGroupID" Id="AdGroupId" Converter="String"/>
				<Xpath Expr="." Attribute="adGroup" Id="AdGroupName" Converter="String"/>
				<Xpath Expr="." Attribute="campaignID" Id="CampaignId" Converter="String"/>
				<Xpath Expr="." Attribute="campaign" Id="CampaignName" Converter="String"/>
				<Xpath Expr="." Attribute="description" Id="Description" Converter="String"/>
				<Resource Id="PerformanceFields"/>
      </Xpath>
		</Parse>
		<Resource Id="FailAWQL"/>
  </RestConnector>

  <RestConnector Id="KeywordsLookup" Title="Keywords Lookup" Group="Targeting Ideas Service">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="Keywords" Title="Keyword(s)" Required="true" Debug.DefaultValue="mamma" HelpText="One or more keywords separated by a newline" Multiline="true"/>
			<Select Id="Location" DefaultValue="all" DefaultSettings="PrefLocation">
				<Resource Id="Locations"/>
			</Select>
			<Select Id="Language" DefaultValue="all" DefaultSettings="PrefLanguage">
				<Resource Id="Languages"/>
			</Select>
			<Checkbox Id="GoogleOnly" Title="Google search only"/>
		</Parameters>
    <Fetch>
      <HttpSettings>
        <Resource Id="HttpSettingsSOAP"/>
        <RequestBody>
          <![CDATA[
					<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
						 <s:Header>
								<RequestHeader xmlns="https://adwords.google.com/api/adwords/o/v201809">
									 <clientCustomerId>@(Model.CustomerId)</clientCustomerId>
									 <developerToken>@(Model.DeveloperToken)</developerToken>
									 <userAgent>SeoTools</userAgent>
								</RequestHeader>
						 </s:Header>
						 <s:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<get xmlns="https://adwords.google.com/api/adwords/o/v201809">
									<selector>
										<searchParameters xsi:type="RelatedToQuerySearchParameter">
											 @GetKeywords()
										</searchParameters>
										@GetLocation()
										@GetLanguage()
										@GetGoogleOnly()
										<ideaType>KEYWORD</ideaType>
										<requestType>STATS</requestType>
										@GetSelectedTags()
										<paging>
											 <startIndex xmlns="https://adwords.google.com/api/adwords/cm/v201809">0</startIndex>
											 <numberResults xmlns="https://adwords.google.com/api/adwords/cm/v201809">@GetKeywordsCount()</numberResults>
										</paging>
								 </selector>
								</get>
						 </s:Body>
					</s:Envelope>
          ]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://adwords.google.com/api/adwords/o/v201809/TargetingIdeaService?
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <Xpath Expr="//getResponse/rval/entries">
				<Xpath Expr="data[key='KEYWORD_TEXT']/value/value" Id="Keyword" Tag="KEYWORD_TEXT" Converter="String"/>
				<Xpath Expr="data[key='COMPETITION']/value/value" Id="Competition" Tag="COMPETITION" Converter="Double"/>
				<Xpath Expr="data[key='SEARCH_VOLUME']/value/value" Id="SearchVolume" Tag="SEARCH_VOLUME" Converter="Int"/>
				<Xpath Expr="data[key='AVERAGE_CPC']/value/value/*[2]" Id="AverageCpc" Tag="AVERAGE_CPC" Converter="Double" Converter.SourceFormat="Micro"/>
      </Xpath>
    </Parse>
    <Resource Id="FailSOAP"/>
  </RestConnector>

  <RestConnector Id="KeywordsLookupTrends" Title="Keywords Lookup Trends" Group="Targeting Ideas Service">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="Keywords" Title="Keyword(s)" Debug.DefaultValue="mamma" HelpText="One or more keywords separated by a newline" Multiline="true"/>
			<Select Id="Location" DefaultValue="all" DefaultSettings="PrefLocation">
				<Resource Id="Locations"/>
			</Select>
			<Select Id="Language" DefaultValue="all" DefaultSettings="PrefLanguage">
				<Resource Id="Languages"/>
			</Select>
			<Checkbox Id="GoogleOnly" Title="Google search only"/>
    </Parameters>
    <Fetch>
      <HttpSettings>
        <Resource Id="HttpSettingsSOAP"/>
        <RequestBody>
          <![CDATA[
					<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
						 <s:Header>
								<RequestHeader xmlns="https://adwords.google.com/api/adwords/o/v201809">
									 <clientCustomerId>@(Model.CustomerId)</clientCustomerId>
									 <developerToken>@(Model.DeveloperToken)</developerToken>
									 <userAgent>SeoTools</userAgent>
								</RequestHeader>
						 </s:Header>
						 <s:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<get xmlns="https://adwords.google.com/api/adwords/o/v201809">
								<selector>
									<searchParameters xsi:type="RelatedToQuerySearchParameter">
										 @GetKeywords()
									</searchParameters>
									@GetLocation()
									@GetLanguage()
									@GetGoogleOnly()
									<ideaType>KEYWORD</ideaType>
									<requestType>STATS</requestType>
									<requestedAttributeTypes>KEYWORD_TEXT</requestedAttributeTypes>
									<requestedAttributeTypes>TARGETED_MONTHLY_SEARCHES</requestedAttributeTypes>
									<paging>
										 <startIndex xmlns="https://adwords.google.com/api/adwords/cm/v201809">0</startIndex>
										 <numberResults xmlns="https://adwords.google.com/api/adwords/cm/v201809">@GetKeywordsCount()</numberResults>
									</paging>
							 </selector>
								</get>
						 </s:Body>
					</s:Envelope>
          ]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://adwords.google.com/api/adwords/o/v201809/TargetingIdeaService?
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <Xpath Expr="//value/value/count">
				<Xpath Expr="../../../../data[key='KEYWORD_TEXT']/value/value" Id="Keyword" Tag="KEYWORD_TEXT" Converter="String"/>
				<Xpath Expr="../year" Id="Year" Converter="Int"/>
				<Xpath Expr="../month" Id="Month" Converter="Int"/>
				<Xpath Expr="." Id="Volume" Converter="Int"/>
      </Xpath>
    </Parse>
    <Resource Id="FailSOAP"/>
  </RestConnector>

  <RestConnector Id="KeywordsIdeas" Title="Keywords Ideas" Group="Targeting Ideas Service">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="Query" Title="Query or URL" Required="true" Debug.DefaultValue="https://seotoolsforexcel.com" HelpText="Find keywords based on a query or URL"/>
			<Select Id="Location" DefaultValue="all" DefaultSettings="PrefLocation">
				<Resource Id="Locations"/>
			</Select>
			<Select Id="Language" DefaultValue="all" DefaultSettings="PrefLanguage">
				<Resource Id="Languages"/>
			</Select>
		</Parameters>
		<Paging PageSize="100"/>
    <Fetch>
      <HttpSettings>
        <Resource Id="HttpSettingsSOAP"/>
        <RequestBody>
          <![CDATA[
					<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
						 <s:Header>
								<RequestHeader xmlns="https://adwords.google.com/api/adwords/o/v201809">
									 <clientCustomerId>@(Model.CustomerId)</clientCustomerId>
									 <developerToken>@(Model.DeveloperToken)</developerToken>
									 <userAgent>SeoTools</userAgent>
								</RequestHeader>
						 </s:Header>
						 <s:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<get xmlns="https://adwords.google.com/api/adwords/o/v201809">
									<selector>
										@GetQueryOrUrl()
										@GetLocation()
										@GetLanguage()
										<ideaType>KEYWORD</ideaType>
										<requestType>IDEAS</requestType>
										@GetSelectedTags()
										<paging>
											 <startIndex xmlns="https://adwords.google.com/api/adwords/cm/v201809">@(Model.PageCursor.NextSkip)</startIndex>
											 <numberResults xmlns="https://adwords.google.com/api/adwords/cm/v201809">@(Model.PageCursor.NextTake)</numberResults>
										</paging>
								 </selector>
								</get>
						 </s:Body>
					</s:Envelope>
          ]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://adwords.google.com/api/adwords/o/v201809/TargetingIdeaService?
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <Xpath Expr="//getResponse/rval/entries">
				<Xpath Expr="data[key='KEYWORD_TEXT']/value/value" Id="Keyword" Tag="KEYWORD_TEXT" Converter="String"/>
				<Xpath Expr="data[key='COMPETITION']/value/value" Id="Competition" Tag="COMPETITION" Converter="Double"/>
				<Xpath Expr="data[key='SEARCH_VOLUME']/value/value" Id="SearchVolume" Tag="SEARCH_VOLUME" Converter="Int"/>	
				<Xpath Expr="data[key='AVERAGE_CPC']/value/value/*[2]" Id="AverageCpc" Tag="AVERAGE_CPC" Converter="Double" Converter.SourceFormat="Micro"/>
      </Xpath>
    </Parse>
    <Resource Id="FailSOAP"/>
  </RestConnector>

  <RestConnector Id="KeywordsIdeasTrends" Title="Keywords Ideas Trends" Group="Targeting Ideas Service">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="Query" Title="Query or URL" Required="true" Debug.DefaultValue="https://seotoolsforexcel.com" HelpText="Find keywords based on a query or URL"/>
			<Select Id="Location" DefaultValue="all" DefaultSettings="PrefLocation">
				<Resource Id="Locations"/>
			</Select>
			<Select Id="Language" DefaultValue="all" DefaultSettings="PrefLanguage">
				<Resource Id="Languages"/>
			</Select>
    </Parameters>
		<Paging PageSize="100" DefaultTake="1200"/>
    <Fetch>
      <HttpSettings>
        <Resource Id="HttpSettingsSOAP"/>
        <RequestBody>
          <![CDATA[
					<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
						 <s:Header>
								<RequestHeader xmlns="https://adwords.google.com/api/adwords/o/v201809">
									 <clientCustomerId>@(Model.CustomerId)</clientCustomerId>
									 <developerToken>@(Model.DeveloperToken)</developerToken>
									 <userAgent>SeoTools</userAgent>
								</RequestHeader>
						 </s:Header>
						 <s:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<get xmlns="https://adwords.google.com/api/adwords/o/v201809">
									<selector>
											@GetQueryOrUrl()
											@GetLocation()
											@GetLanguage()
											<ideaType>KEYWORD</ideaType>
											<requestType>IDEAS</requestType>
										<requestedAttributeTypes>KEYWORD_TEXT</requestedAttributeTypes>
										<requestedAttributeTypes>TARGETED_MONTHLY_SEARCHES</requestedAttributeTypes>
										<paging>
											 <startIndex xmlns="https://adwords.google.com/api/adwords/cm/v201809">@(Model.PageCursor.Page*100)</startIndex>
											 <numberResults xmlns="https://adwords.google.com/api/adwords/cm/v201809">100</numberResults>
										</paging>
								 </selector>
								</get>
						 </s:Body>
					</s:Envelope>
          ]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://adwords.google.com/api/adwords/o/v201809/TargetingIdeaService?
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <Xpath Expr="//value/value/count">
				<Xpath Expr="../../../../data[key='KEYWORD_TEXT']/value/value" Id="Keyword" Tag="KEYWORD_TEXT" Converter="String"/>
				<Xpath Expr="../year" Id="Year" Converter="Int"/>
				<Xpath Expr="../month" Id="Month" Converter="Int"/>
				<Xpath Expr="." Id="Volume" Converter="Int"/>
      </Xpath>
    </Parse>
    <Resource Id="FailSOAP"/>
  </RestConnector>

  <RestConnector Id="AWQL" Title="Custom Query" Group="Adwords Query Language (AWQL)">
		<Parameters>
			<Text Id="CustomerId" Title="Customer Id" Required="true" Debug.DefaultValue="9518714818" Select.Connector="Customers"/>
			<Text Id="Query" Title="Awql" Required="true" HelpText="Adwords Query Language" HelpUrl="https://scriptninja.de/en/blog/awql" Multiline="true"/>
    </Parameters>
    <Fetch>
			<HttpSettings>
				<Resource Id="HttpSettingsAWQL"/>
				<RequestForm>
          <Param Name='__rdquery'>@(Model.Query)</Param>
          <Param Name='__fmt'>CSV</Param>
				</RequestForm>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
					https://adwords.google.com/api/adwords/reportdownload/v201809
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Csv Separator="," HasHeader="true" SkipRowsAtStart="1" DefaultConverter="Auto"/>
    </Parse>
		<Fail>
			<Regex Expr="ApiError" Group="0" Fail.Action="Request" Fail.RequestId="FindError"/>
			<XPath Id="FindError" Expr="//apierror/type"/>
		</Fail>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
			string GetSELECT() {
        string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim()).ToArray();
				return "SELECT " + string.Join(",",((ResultField[])Model.Headers).Where(e => fields.Contains(e.Identifier)).Select(f => f.Identifier).ToArray());
			}

			string GetSelectedTags() {
        string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
				return string.Join("\n",
					((ResultField[])Model.Headers)
					.Where(e => fields.Contains(e.Identifier.ToLower()))
					.Select(f => new XElement("requestedAttributeTypes", f.Tag).ToString()));
			}

			string GetKeywords() {
				return string.Join("\n",
					((string)Model.Keywords)
					.Trim().Split('\n')
					.Where(e => !string.IsNullOrEmpty(e))
					.Select(f => new XElement("queries", f.Trim()).ToString()));
			}

			int GetKeywordsCount() {
				return ((string)Model.Keywords).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).Count();
			}

			string AdjustWhere() {
				return Model.CustomWhere.ToLower().StartsWith("where ")
					? Model.CustomWhere.Substring(6)
					: Model.CustomWhere;
			}

			string GetLocation() {
				if(Model.Location == "all") return string.Empty;
				XNamespace aw = "https://adwords.google.com/api/adwords/cm/v201809";
            string locationTag = new XElement("locations", new XElement(aw + "id", Model.Location)).ToString();
            return "<searchParameters xsi:type=\"LocationSearchParameter\">" + "\n"
							+ locationTag + "\n"
              + "</searchParameters>";
			}

			string GetLanguage() {
				if(Model.Language == "all") return string.Empty;
				XNamespace aw = "https://adwords.google.com/api/adwords/cm/v201809";
            string languageTag = new XElement("languages", new XElement(aw + "id", Model.Language)).ToString();
            return "<searchParameters xsi:type=\"LanguageSearchParameter\">" + "\n"
							+ languageTag + "\n"
              + "</searchParameters>";
			}

			string GetGoogleOnly() {
				if(!Model.GoogleOnly) return string.Empty;
				XNamespace aw = "https://adwords.google.com/api/adwords/cm/v201809";

						string networkSettingTag = new XElement("networkSetting",
							new XElement(aw + "targetGoogleSearch", true),
							new XElement(aw + "targetSearchNetwork", false),
							new XElement(aw + "targetContentNetwork", false),
							new XElement(aw + "targetPartnerSearchNetwork", false))
							.ToString();

            return "<searchParameters xsi:type=\"NetworkSearchParameter\">" + "\n"
							+ networkSettingTag + "\n"
              + "</searchParameters>";
			}

			string GetQueryOrUrl() {
				Uri _uri;
				string type = "RelatedToQuerySearchParameter";
				string tag = "queries";
				if (Uri.TryCreate(Model.Query, UriKind.Absolute, out _uri))
				{
						type = "RelatedToUrlSearchParameter";
						tag = "urls";
				}

				return "<searchParameters xsi:type=\"" + type + "\">" + "\n"
					+ new XElement(tag,Model.Query)
					+ "</searchParameters>";
			}
    ]]>
  </RazorFunctions>

</Suite>